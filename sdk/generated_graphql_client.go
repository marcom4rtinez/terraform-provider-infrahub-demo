// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package infrahub_sdk

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/Khan/genqlient/graphql"
)

// AccountsCoreAccountPaginatedCoreAccount includes the requested fields of the GraphQL type PaginatedCoreAccount.
// The GraphQL type's documentation follows.
//
// User Account for Infrahub
type AccountsCoreAccountPaginatedCoreAccount struct {
	Edges []AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccount `json:"edges"`
}

// GetEdges returns AccountsCoreAccountPaginatedCoreAccount.Edges, and is useful for accessing the field via an interface.
func (v *AccountsCoreAccountPaginatedCoreAccount) GetEdges() []AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccount {
	return v.Edges
}

// AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccount includes the requested fields of the GraphQL type EdgedCoreAccount.
// The GraphQL type's documentation follows.
//
// User Account for Infrahub
type AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccount struct {
	Node AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccount `json:"node"`
}

// GetNode returns AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccount.Node, and is useful for accessing the field via an interface.
func (v *AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccount) GetNode() AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccount {
	return v.Node
}

// AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccount includes the requested fields of the GraphQL type CoreAccount.
// The GraphQL type's documentation follows.
//
// User Account for Infrahub
type AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccount struct {
	// Unique identifier
	Id            string                                                                                    `json:"id"`
	Status        AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown `json:"status"`
	Display_label string                                                                                    `json:"display_label"`
}

// GetId returns AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccount.Id, and is useful for accessing the field via an interface.
func (v *AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccount) GetId() string {
	return v.Id
}

// GetStatus returns AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccount.Status, and is useful for accessing the field via an interface.
func (v *AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccount) GetStatus() AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown {
	return v.Status
}

// GetDisplay_label returns AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccount.Display_label, and is useful for accessing the field via an interface.
func (v *AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccount) GetDisplay_label() string {
	return v.Display_label
}

// AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown includes the requested fields of the GraphQL type Dropdown.
// The GraphQL type's documentation follows.
//
// Attribute of type Dropdown
type AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown struct {
	Id          string `json:"id"`
	Description string `json:"description"`
	Color       string `json:"color"`
	Value       string `json:"value"`
}

// GetId returns AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown.Id, and is useful for accessing the field via an interface.
func (v *AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown) GetId() string {
	return v.Id
}

// GetDescription returns AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown.Description, and is useful for accessing the field via an interface.
func (v *AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown) GetDescription() string {
	return v.Description
}

// GetColor returns AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown.Color, and is useful for accessing the field via an interface.
func (v *AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown) GetColor() string {
	return v.Color
}

// GetValue returns AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown.Value, and is useful for accessing the field via an interface.
func (v *AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown) GetValue() string {
	return v.Value
}

// AccountsResponse is returned by Accounts on success.
type AccountsResponse struct {
	CoreAccount AccountsCoreAccountPaginatedCoreAccount `json:"CoreAccount"`
}

// GetCoreAccount returns AccountsResponse.CoreAccount, and is useful for accessing the field via an interface.
func (v *AccountsResponse) GetCoreAccount() AccountsCoreAccountPaginatedCoreAccount {
	return v.CoreAccount
}

// AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystem includes the requested fields of the GraphQL type PaginatedInfraAutonomousSystem.
// The GraphQL type's documentation follows.
//
// An Autonomous System (AS) is a set of Internet routable IP prefixes belonging to a network
type AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystem struct {
	Edges []AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystem `json:"edges"`
}

// GetEdges returns AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystem.Edges, and is useful for accessing the field via an interface.
func (v *AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystem) GetEdges() []AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystem {
	return v.Edges
}

// AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystem includes the requested fields of the GraphQL type EdgedInfraAutonomousSystem.
// The GraphQL type's documentation follows.
//
// An Autonomous System (AS) is a set of Internet routable IP prefixes belonging to a network
type AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystem struct {
	Node AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystem `json:"node"`
}

// GetNode returns AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystem.Node, and is useful for accessing the field via an interface.
func (v *AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystem) GetNode() AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystem {
	return v.Node
}

// AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystem includes the requested fields of the GraphQL type InfraAutonomousSystem.
// The GraphQL type's documentation follows.
//
// An Autonomous System (AS) is a set of Internet routable IP prefixes belonging to a network
type AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystem struct {
	// Unique identifier
	Id            string                                                                                                                                              `json:"id"`
	Name          AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystemNameTextAttribute        `json:"name"`
	Asn           AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute       `json:"asn"`
	Display_label string                                                                                                                                              `json:"display_label"`
	Description   AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystemDescriptionTextAttribute `json:"description"`
}

// GetId returns AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystem.Id, and is useful for accessing the field via an interface.
func (v *AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystem) GetId() string {
	return v.Id
}

// GetName returns AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystem.Name, and is useful for accessing the field via an interface.
func (v *AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystem) GetName() AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystemNameTextAttribute {
	return v.Name
}

// GetAsn returns AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystem.Asn, and is useful for accessing the field via an interface.
func (v *AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystem) GetAsn() AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute {
	return v.Asn
}

// GetDisplay_label returns AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystem.Display_label, and is useful for accessing the field via an interface.
func (v *AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystem) GetDisplay_label() string {
	return v.Display_label
}

// GetDescription returns AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystem.Description, and is useful for accessing the field via an interface.
func (v *AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystem) GetDescription() AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystemDescriptionTextAttribute {
	return v.Description
}

// AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute includes the requested fields of the GraphQL type NumberAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Number
type AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute struct {
	Id string `json:"id"`
}

// GetId returns AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute.Id, and is useful for accessing the field via an interface.
func (v *AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute) GetId() string {
	return v.Id
}

// AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystemDescriptionTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystemDescriptionTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystemDescriptionTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystemDescriptionTextAttribute) GetValue() string {
	return v.Value
}

// AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystemNameTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystemNameTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystemNameTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystemEdgesEdgedInfraAutonomousSystemNodeInfraAutonomousSystemNameTextAttribute) GetValue() string {
	return v.Value
}

// AutonomoussystemResponse is returned by Autonomoussystem on success.
type AutonomoussystemResponse struct {
	InfraAutonomousSystem AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystem `json:"InfraAutonomousSystem"`
}

// GetInfraAutonomousSystem returns AutonomoussystemResponse.InfraAutonomousSystem, and is useful for accessing the field via an interface.
func (v *AutonomoussystemResponse) GetInfraAutonomousSystem() AutonomoussystemInfraAutonomousSystemPaginatedInfraAutonomousSystem {
	return v.InfraAutonomousSystem
}

// BgpsessionsInfraBGPSessionPaginatedInfraBGPSession includes the requested fields of the GraphQL type PaginatedInfraBGPSession.
// The GraphQL type's documentation follows.
//
// A BGP Session represent a point to point connection between two routers
type BgpsessionsInfraBGPSessionPaginatedInfraBGPSession struct {
	Edges []BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSession `json:"edges"`
}

// GetEdges returns BgpsessionsInfraBGPSessionPaginatedInfraBGPSession.Edges, and is useful for accessing the field via an interface.
func (v *BgpsessionsInfraBGPSessionPaginatedInfraBGPSession) GetEdges() []BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSession {
	return v.Edges
}

// BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSession includes the requested fields of the GraphQL type EdgedInfraBGPSession.
// The GraphQL type's documentation follows.
//
// A BGP Session represent a point to point connection between two routers
type BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSession struct {
	Node BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession `json:"node"`
}

// GetNode returns BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSession.Node, and is useful for accessing the field via an interface.
func (v *BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSession) GetNode() BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession {
	return v.Node
}

// BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession includes the requested fields of the GraphQL type InfraBGPSession.
// The GraphQL type's documentation follows.
//
// A BGP Session represent a point to point connection between two routers
type BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession struct {
	// Unique identifier
	Id            string                                                                                                                           `json:"id"`
	Display_label string                                                                                                                           `json:"display_label"`
	Description   BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionDescriptionTextAttribute           `json:"description"`
	Remote_ip     BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddress `json:"remote_ip"`
}

// GetId returns BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession.Id, and is useful for accessing the field via an interface.
func (v *BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession) GetId() string {
	return v.Id
}

// GetDisplay_label returns BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession.Display_label, and is useful for accessing the field via an interface.
func (v *BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession) GetDisplay_label() string {
	return v.Display_label
}

// GetDescription returns BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession.Description, and is useful for accessing the field via an interface.
func (v *BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession) GetDescription() BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionDescriptionTextAttribute {
	return v.Description
}

// GetRemote_ip returns BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession.Remote_ip, and is useful for accessing the field via an interface.
func (v *BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession) GetRemote_ip() BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddress {
	return v.Remote_ip
}

// BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionDescriptionTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionDescriptionTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionDescriptionTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionDescriptionTextAttribute) GetValue() string {
	return v.Value
}

// BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddress includes the requested fields of the GraphQL type NestedEdgedInfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddress struct {
	Node BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddress `json:"node"`
}

// GetNode returns BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddress.Node, and is useful for accessing the field via an interface.
func (v *BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddress) GetNode() BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddress {
	return v.Node
}

// BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddress includes the requested fields of the GraphQL type InfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddress struct {
	Address BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost `json:"address"`
}

// GetAddress returns BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddress.Address, and is useful for accessing the field via an interface.
func (v *BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddress) GetAddress() BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost {
	return v.Address
}

// BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost includes the requested fields of the GraphQL type IPHost.
// The GraphQL type's documentation follows.
//
// Attribute of type IPHost
type BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost struct {
	Value string `json:"value"`
}

// GetValue returns BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost.Value, and is useful for accessing the field via an interface.
func (v *BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost) GetValue() string {
	return v.Value
}

// BgpsessionsResponse is returned by Bgpsessions on success.
type BgpsessionsResponse struct {
	InfraBGPSession BgpsessionsInfraBGPSessionPaginatedInfraBGPSession `json:"InfraBGPSession"`
}

// GetInfraBGPSession returns BgpsessionsResponse.InfraBGPSession, and is useful for accessing the field via an interface.
func (v *BgpsessionsResponse) GetInfraBGPSession() BgpsessionsInfraBGPSessionPaginatedInfraBGPSession {
	return v.InfraBGPSession
}

// CountriesLocationCountryPaginatedLocationCountry includes the requested fields of the GraphQL type PaginatedLocationCountry.
type CountriesLocationCountryPaginatedLocationCountry struct {
	Edges []CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountry `json:"edges"`
}

// GetEdges returns CountriesLocationCountryPaginatedLocationCountry.Edges, and is useful for accessing the field via an interface.
func (v *CountriesLocationCountryPaginatedLocationCountry) GetEdges() []CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountry {
	return v.Edges
}

// CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountry includes the requested fields of the GraphQL type EdgedLocationCountry.
type CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountry struct {
	Node CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry `json:"node"`
}

// GetNode returns CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountry.Node, and is useful for accessing the field via an interface.
func (v *CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountry) GetNode() CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry {
	return v.Node
}

// CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry includes the requested fields of the GraphQL type LocationCountry.
type CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry struct {
	// Unique identifier
	Id            string                                                                                                               `json:"id"`
	Display_label string                                                                                                               `json:"display_label"`
	Name          CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryNameTextAttribute        `json:"name"`
	Description   CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryDescriptionTextAttribute `json:"description"`
}

// GetId returns CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry.Id, and is useful for accessing the field via an interface.
func (v *CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry) GetId() string {
	return v.Id
}

// GetDisplay_label returns CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry.Display_label, and is useful for accessing the field via an interface.
func (v *CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry) GetDisplay_label() string {
	return v.Display_label
}

// GetName returns CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry.Name, and is useful for accessing the field via an interface.
func (v *CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry) GetName() CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryNameTextAttribute {
	return v.Name
}

// GetDescription returns CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry.Description, and is useful for accessing the field via an interface.
func (v *CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry) GetDescription() CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryDescriptionTextAttribute {
	return v.Description
}

// CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryDescriptionTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryDescriptionTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryDescriptionTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryDescriptionTextAttribute) GetValue() string {
	return v.Value
}

// CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryNameTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryNameTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryNameTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *CountriesLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryNameTextAttribute) GetValue() string {
	return v.Value
}

// CountriesResponse is returned by Countries on success.
type CountriesResponse struct {
	LocationCountry CountriesLocationCountryPaginatedLocationCountry `json:"LocationCountry"`
}

// GetLocationCountry returns CountriesResponse.LocationCountry, and is useful for accessing the field via an interface.
func (v *CountriesResponse) GetLocationCountry() CountriesLocationCountryPaginatedLocationCountry {
	return v.LocationCountry
}

// CountryLocationCountryPaginatedLocationCountry includes the requested fields of the GraphQL type PaginatedLocationCountry.
type CountryLocationCountryPaginatedLocationCountry struct {
	Edges []CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountry `json:"edges"`
}

// GetEdges returns CountryLocationCountryPaginatedLocationCountry.Edges, and is useful for accessing the field via an interface.
func (v *CountryLocationCountryPaginatedLocationCountry) GetEdges() []CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountry {
	return v.Edges
}

// CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountry includes the requested fields of the GraphQL type EdgedLocationCountry.
type CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountry struct {
	Node CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry `json:"node"`
}

// GetNode returns CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountry.Node, and is useful for accessing the field via an interface.
func (v *CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountry) GetNode() CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry {
	return v.Node
}

// CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry includes the requested fields of the GraphQL type LocationCountry.
type CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry struct {
	// Unique identifier
	Id            string                                                                                                             `json:"id"`
	Display_label string                                                                                                             `json:"display_label"`
	Name          CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryNameTextAttribute        `json:"name"`
	Description   CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryDescriptionTextAttribute `json:"description"`
}

// GetId returns CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry.Id, and is useful for accessing the field via an interface.
func (v *CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry) GetId() string {
	return v.Id
}

// GetDisplay_label returns CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry.Display_label, and is useful for accessing the field via an interface.
func (v *CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry) GetDisplay_label() string {
	return v.Display_label
}

// GetName returns CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry.Name, and is useful for accessing the field via an interface.
func (v *CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry) GetName() CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryNameTextAttribute {
	return v.Name
}

// GetDescription returns CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry.Description, and is useful for accessing the field via an interface.
func (v *CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountry) GetDescription() CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryDescriptionTextAttribute {
	return v.Description
}

// CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryDescriptionTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryDescriptionTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryDescriptionTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryDescriptionTextAttribute) GetValue() string {
	return v.Value
}

// CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryNameTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryNameTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryNameTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *CountryLocationCountryPaginatedLocationCountryEdgesEdgedLocationCountryNodeLocationCountryNameTextAttribute) GetValue() string {
	return v.Value
}

// CountryResponse is returned by Country on success.
type CountryResponse struct {
	LocationCountry CountryLocationCountryPaginatedLocationCountry `json:"LocationCountry"`
}

// GetLocationCountry returns CountryResponse.LocationCountry, and is useful for accessing the field via an interface.
func (v *CountryResponse) GetLocationCountry() CountryLocationCountryPaginatedLocationCountry {
	return v.LocationCountry
}

// DeviceCreateInfraDeviceCreate includes the requested fields of the GraphQL type InfraDeviceCreate.
type DeviceCreateInfraDeviceCreate struct {
	Object   DeviceCreateInfraDeviceCreateObjectInfraDevice `json:"object"`
	Typename string                                         `json:"__typename"`
}

// GetObject returns DeviceCreateInfraDeviceCreate.Object, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreate) GetObject() DeviceCreateInfraDeviceCreateObjectInfraDevice {
	return v.Object
}

// GetTypename returns DeviceCreateInfraDeviceCreate.Typename, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreate) GetTypename() string { return v.Typename }

// DeviceCreateInfraDeviceCreateObjectInfraDevice includes the requested fields of the GraphQL type InfraDevice.
type DeviceCreateInfraDeviceCreateObjectInfraDevice struct {
	// Unique identifier
	Id              string                                                                                 `json:"id"`
	Display_label   string                                                                                 `json:"display_label"`
	Typename        string                                                                                 `json:"__typename"`
	Name            DeviceCreateInfraDeviceCreateObjectInfraDeviceNameTextAttribute                        `json:"name"`
	Role            DeviceCreateInfraDeviceCreateObjectInfraDeviceRoleDropdown                             `json:"role"`
	Asn             DeviceCreateInfraDeviceCreateObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystem      `json:"asn"`
	Description     DeviceCreateInfraDeviceCreateObjectInfraDeviceDescriptionTextAttribute                 `json:"description"`
	Device_type     DeviceCreateInfraDeviceCreateObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceType    `json:"device_type"`
	Location        DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGeneric       `json:"location"`
	Platform        DeviceCreateInfraDeviceCreateObjectInfraDevicePlatformNestedEdgedInfraPlatform         `json:"platform"`
	Primary_address DeviceCreateInfraDeviceCreateObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddress `json:"primary_address"`
	Status          DeviceCreateInfraDeviceCreateObjectInfraDeviceStatusDropdown                           `json:"status"`
	Topology        DeviceCreateInfraDeviceCreateObjectInfraDeviceTopologyNestedEdgedTopologyTopology      `json:"topology"`
}

// GetId returns DeviceCreateInfraDeviceCreateObjectInfraDevice.Id, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDevice) GetId() string { return v.Id }

// GetDisplay_label returns DeviceCreateInfraDeviceCreateObjectInfraDevice.Display_label, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDevice) GetDisplay_label() string {
	return v.Display_label
}

// GetTypename returns DeviceCreateInfraDeviceCreateObjectInfraDevice.Typename, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDevice) GetTypename() string { return v.Typename }

// GetName returns DeviceCreateInfraDeviceCreateObjectInfraDevice.Name, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDevice) GetName() DeviceCreateInfraDeviceCreateObjectInfraDeviceNameTextAttribute {
	return v.Name
}

// GetRole returns DeviceCreateInfraDeviceCreateObjectInfraDevice.Role, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDevice) GetRole() DeviceCreateInfraDeviceCreateObjectInfraDeviceRoleDropdown {
	return v.Role
}

// GetAsn returns DeviceCreateInfraDeviceCreateObjectInfraDevice.Asn, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDevice) GetAsn() DeviceCreateInfraDeviceCreateObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystem {
	return v.Asn
}

// GetDescription returns DeviceCreateInfraDeviceCreateObjectInfraDevice.Description, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDevice) GetDescription() DeviceCreateInfraDeviceCreateObjectInfraDeviceDescriptionTextAttribute {
	return v.Description
}

// GetDevice_type returns DeviceCreateInfraDeviceCreateObjectInfraDevice.Device_type, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDevice) GetDevice_type() DeviceCreateInfraDeviceCreateObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceType {
	return v.Device_type
}

// GetLocation returns DeviceCreateInfraDeviceCreateObjectInfraDevice.Location, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDevice) GetLocation() DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGeneric {
	return v.Location
}

// GetPlatform returns DeviceCreateInfraDeviceCreateObjectInfraDevice.Platform, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDevice) GetPlatform() DeviceCreateInfraDeviceCreateObjectInfraDevicePlatformNestedEdgedInfraPlatform {
	return v.Platform
}

// GetPrimary_address returns DeviceCreateInfraDeviceCreateObjectInfraDevice.Primary_address, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDevice) GetPrimary_address() DeviceCreateInfraDeviceCreateObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddress {
	return v.Primary_address
}

// GetStatus returns DeviceCreateInfraDeviceCreateObjectInfraDevice.Status, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDevice) GetStatus() DeviceCreateInfraDeviceCreateObjectInfraDeviceStatusDropdown {
	return v.Status
}

// GetTopology returns DeviceCreateInfraDeviceCreateObjectInfraDevice.Topology, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDevice) GetTopology() DeviceCreateInfraDeviceCreateObjectInfraDeviceTopologyNestedEdgedTopologyTopology {
	return v.Topology
}

// DeviceCreateInfraDeviceCreateObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystem includes the requested fields of the GraphQL type NestedEdgedInfraAutonomousSystem.
// The GraphQL type's documentation follows.
//
// An Autonomous System (AS) is a set of Internet routable IP prefixes belonging to a network
type DeviceCreateInfraDeviceCreateObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystem struct {
	Node DeviceCreateInfraDeviceCreateObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem `json:"node"`
}

// GetNode returns DeviceCreateInfraDeviceCreateObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystem.Node, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystem) GetNode() DeviceCreateInfraDeviceCreateObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem {
	return v.Node
}

// DeviceCreateInfraDeviceCreateObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem includes the requested fields of the GraphQL type InfraAutonomousSystem.
// The GraphQL type's documentation follows.
//
// An Autonomous System (AS) is a set of Internet routable IP prefixes belonging to a network
type DeviceCreateInfraDeviceCreateObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DeviceCreateInfraDeviceCreateObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem.Id, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem) GetId() string {
	return v.Id
}

// DeviceCreateInfraDeviceCreateObjectInfraDeviceDescriptionTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type DeviceCreateInfraDeviceCreateObjectInfraDeviceDescriptionTextAttribute struct {
	Id    string `json:"id"`
	Value string `json:"value"`
}

// GetId returns DeviceCreateInfraDeviceCreateObjectInfraDeviceDescriptionTextAttribute.Id, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceDescriptionTextAttribute) GetId() string {
	return v.Id
}

// GetValue returns DeviceCreateInfraDeviceCreateObjectInfraDeviceDescriptionTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceDescriptionTextAttribute) GetValue() string {
	return v.Value
}

// DeviceCreateInfraDeviceCreateObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceType includes the requested fields of the GraphQL type NestedEdgedInfraDeviceType.
// The GraphQL type's documentation follows.
//
// A model of device
type DeviceCreateInfraDeviceCreateObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceType struct {
	Node DeviceCreateInfraDeviceCreateObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType `json:"node"`
}

// GetNode returns DeviceCreateInfraDeviceCreateObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceType.Node, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceType) GetNode() DeviceCreateInfraDeviceCreateObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType {
	return v.Node
}

// DeviceCreateInfraDeviceCreateObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType includes the requested fields of the GraphQL type InfraDeviceType.
// The GraphQL type's documentation follows.
//
// A model of device
type DeviceCreateInfraDeviceCreateObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DeviceCreateInfraDeviceCreateObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType.Id, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType) GetId() string {
	return v.Id
}

// DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGeneric includes the requested fields of the GraphQL type NestedEdgedLocationGeneric.
// The GraphQL type's documentation follows.
//
// Generic Location Interface.
type DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGeneric struct {
	Node DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric `json:"-"`
}

// GetNode returns DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGeneric.Node, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGeneric) GetNode() DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric {
	return v.Node
}

func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGeneric) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGeneric
		Node json.RawMessage `json:"node"`
		graphql.NoUnmarshalJSON
	}
	firstPass.DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGeneric = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Node
		src := firstPass.Node
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalDeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGeneric.Node: %w", err)
			}
		}
	}
	return nil
}

type __premarshalDeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGeneric struct {
	Node json.RawMessage `json:"node"`
}

func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGeneric) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGeneric) __premarshalJSON() (*__premarshalDeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGeneric, error) {
	var retval __premarshalDeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGeneric

	{

		dst := &retval.Node
		src := v.Node
		var err error
		*dst, err = __marshalDeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGeneric.Node: %w", err)
		}
	}
	return &retval, nil
}

// DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding includes the requested fields of the GraphQL type LocationBuilding.
type DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding.Typename, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding.Id, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding) GetId() string {
	return v.Id
}

// DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent includes the requested fields of the GraphQL type LocationContinent.
type DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent.Typename, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent.Id, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent) GetId() string {
	return v.Id
}

// DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry includes the requested fields of the GraphQL type LocationCountry.
type DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry.Typename, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry.Id, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry) GetId() string {
	return v.Id
}

// DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor includes the requested fields of the GraphQL type LocationFloor.
type DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor.Typename, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor.Id, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor) GetId() string {
	return v.Id
}

// DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric includes the requested fields of the GraphQL interface LocationGeneric.
//
// DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric is implemented by the following types:
// DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding
// DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent
// DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry
// DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor
// DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro
// DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack
// DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion
// DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite
// The GraphQL type's documentation follows.
//
// Generic Location Interface.
type DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric interface {
	implementsGraphQLInterfaceDeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
	// GetId returns the interface-field "id" from its implementation.
	// The GraphQL interface field's documentation follows.
	//
	// Unique identifier
	GetId() string
}

func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding) implementsGraphQLInterfaceDeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent) implementsGraphQLInterfaceDeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry) implementsGraphQLInterfaceDeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor) implementsGraphQLInterfaceDeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro) implementsGraphQLInterfaceDeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack) implementsGraphQLInterfaceDeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion) implementsGraphQLInterfaceDeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite) implementsGraphQLInterfaceDeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}

func __unmarshalDeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric(b []byte, v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "LocationBuilding":
		*v = new(DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding)
		return json.Unmarshal(b, *v)
	case "LocationContinent":
		*v = new(DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent)
		return json.Unmarshal(b, *v)
	case "LocationCountry":
		*v = new(DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry)
		return json.Unmarshal(b, *v)
	case "LocationFloor":
		*v = new(DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor)
		return json.Unmarshal(b, *v)
	case "LocationMetro":
		*v = new(DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro)
		return json.Unmarshal(b, *v)
	case "LocationRack":
		*v = new(DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack)
		return json.Unmarshal(b, *v)
	case "LocationRegion":
		*v = new(DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion)
		return json.Unmarshal(b, *v)
	case "LocationSuite":
		*v = new(DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing LocationGeneric.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric: "%v"`, tn.TypeName)
	}
}

func __marshalDeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric(v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding:
		typename = "LocationBuilding"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding
		}{typename, v}
		return json.Marshal(result)
	case *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent:
		typename = "LocationContinent"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent
		}{typename, v}
		return json.Marshal(result)
	case *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry:
		typename = "LocationCountry"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry
		}{typename, v}
		return json.Marshal(result)
	case *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor:
		typename = "LocationFloor"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor
		}{typename, v}
		return json.Marshal(result)
	case *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro:
		typename = "LocationMetro"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro
		}{typename, v}
		return json.Marshal(result)
	case *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack:
		typename = "LocationRack"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack
		}{typename, v}
		return json.Marshal(result)
	case *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion:
		typename = "LocationRegion"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion
		}{typename, v}
		return json.Marshal(result)
	case *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite:
		typename = "LocationSuite"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric: "%T"`, v)
	}
}

// DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro includes the requested fields of the GraphQL type LocationMetro.
type DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro.Typename, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro.Id, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro) GetId() string {
	return v.Id
}

// DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack includes the requested fields of the GraphQL type LocationRack.
type DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack.Typename, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack.Id, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack) GetId() string {
	return v.Id
}

// DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion includes the requested fields of the GraphQL type LocationRegion.
type DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion.Typename, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion.Id, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion) GetId() string {
	return v.Id
}

// DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite includes the requested fields of the GraphQL type LocationSuite.
type DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite.Typename, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite.Id, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite) GetId() string {
	return v.Id
}

// DeviceCreateInfraDeviceCreateObjectInfraDeviceNameTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type DeviceCreateInfraDeviceCreateObjectInfraDeviceNameTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns DeviceCreateInfraDeviceCreateObjectInfraDeviceNameTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceNameTextAttribute) GetValue() string {
	return v.Value
}

// DeviceCreateInfraDeviceCreateObjectInfraDevicePlatformNestedEdgedInfraPlatform includes the requested fields of the GraphQL type NestedEdgedInfraPlatform.
// The GraphQL type's documentation follows.
//
// A Platform represent the type of software running on a device.
type DeviceCreateInfraDeviceCreateObjectInfraDevicePlatformNestedEdgedInfraPlatform struct {
	Node DeviceCreateInfraDeviceCreateObjectInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform `json:"node"`
}

// GetNode returns DeviceCreateInfraDeviceCreateObjectInfraDevicePlatformNestedEdgedInfraPlatform.Node, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDevicePlatformNestedEdgedInfraPlatform) GetNode() DeviceCreateInfraDeviceCreateObjectInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform {
	return v.Node
}

// DeviceCreateInfraDeviceCreateObjectInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform includes the requested fields of the GraphQL type InfraPlatform.
// The GraphQL type's documentation follows.
//
// A Platform represent the type of software running on a device.
type DeviceCreateInfraDeviceCreateObjectInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DeviceCreateInfraDeviceCreateObjectInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform.Id, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform) GetId() string {
	return v.Id
}

// DeviceCreateInfraDeviceCreateObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddress includes the requested fields of the GraphQL type NestedEdgedInfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type DeviceCreateInfraDeviceCreateObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddress struct {
	Node DeviceCreateInfraDeviceCreateObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress `json:"node"`
}

// GetNode returns DeviceCreateInfraDeviceCreateObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddress.Node, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddress) GetNode() DeviceCreateInfraDeviceCreateObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress {
	return v.Node
}

// DeviceCreateInfraDeviceCreateObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress includes the requested fields of the GraphQL type InfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type DeviceCreateInfraDeviceCreateObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DeviceCreateInfraDeviceCreateObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress.Id, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress) GetId() string {
	return v.Id
}

// DeviceCreateInfraDeviceCreateObjectInfraDeviceRoleDropdown includes the requested fields of the GraphQL type Dropdown.
// The GraphQL type's documentation follows.
//
// Attribute of type Dropdown
type DeviceCreateInfraDeviceCreateObjectInfraDeviceRoleDropdown struct {
	Value string `json:"value"`
	Id    string `json:"id"`
}

// GetValue returns DeviceCreateInfraDeviceCreateObjectInfraDeviceRoleDropdown.Value, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceRoleDropdown) GetValue() string {
	return v.Value
}

// GetId returns DeviceCreateInfraDeviceCreateObjectInfraDeviceRoleDropdown.Id, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceRoleDropdown) GetId() string { return v.Id }

// DeviceCreateInfraDeviceCreateObjectInfraDeviceStatusDropdown includes the requested fields of the GraphQL type Dropdown.
// The GraphQL type's documentation follows.
//
// Attribute of type Dropdown
type DeviceCreateInfraDeviceCreateObjectInfraDeviceStatusDropdown struct {
	Id    string `json:"id"`
	Value string `json:"value"`
}

// GetId returns DeviceCreateInfraDeviceCreateObjectInfraDeviceStatusDropdown.Id, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceStatusDropdown) GetId() string { return v.Id }

// GetValue returns DeviceCreateInfraDeviceCreateObjectInfraDeviceStatusDropdown.Value, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceStatusDropdown) GetValue() string {
	return v.Value
}

// DeviceCreateInfraDeviceCreateObjectInfraDeviceTopologyNestedEdgedTopologyTopology includes the requested fields of the GraphQL type NestedEdgedTopologyTopology.
// The GraphQL type's documentation follows.
//
// A Topology represents the entire network pod.
type DeviceCreateInfraDeviceCreateObjectInfraDeviceTopologyNestedEdgedTopologyTopology struct {
	Node DeviceCreateInfraDeviceCreateObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology `json:"node"`
}

// GetNode returns DeviceCreateInfraDeviceCreateObjectInfraDeviceTopologyNestedEdgedTopologyTopology.Node, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceTopologyNestedEdgedTopologyTopology) GetNode() DeviceCreateInfraDeviceCreateObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology {
	return v.Node
}

// DeviceCreateInfraDeviceCreateObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology includes the requested fields of the GraphQL type TopologyTopology.
// The GraphQL type's documentation follows.
//
// A Topology represents the entire network pod.
type DeviceCreateInfraDeviceCreateObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology struct {
	// Unique identifier
	Id   string                                                                                                                 `json:"id"`
	Name DeviceCreateInfraDeviceCreateObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute `json:"name"`
}

// GetId returns DeviceCreateInfraDeviceCreateObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology.Id, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology) GetId() string {
	return v.Id
}

// GetName returns DeviceCreateInfraDeviceCreateObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology.Name, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology) GetName() DeviceCreateInfraDeviceCreateObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute {
	return v.Name
}

// DeviceCreateInfraDeviceCreateObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type DeviceCreateInfraDeviceCreateObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns DeviceCreateInfraDeviceCreateObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *DeviceCreateInfraDeviceCreateObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute) GetValue() string {
	return v.Value
}

// DeviceCreateResponse is returned by DeviceCreate on success.
type DeviceCreateResponse struct {
	InfraDeviceCreate DeviceCreateInfraDeviceCreate `json:"InfraDeviceCreate"`
}

// GetInfraDeviceCreate returns DeviceCreateResponse.InfraDeviceCreate, and is useful for accessing the field via an interface.
func (v *DeviceCreateResponse) GetInfraDeviceCreate() DeviceCreateInfraDeviceCreate {
	return v.InfraDeviceCreate
}

// DeviceDeleteInfraDeviceDelete includes the requested fields of the GraphQL type InfraDeviceDelete.
type DeviceDeleteInfraDeviceDelete struct {
	Ok bool `json:"ok"`
}

// GetOk returns DeviceDeleteInfraDeviceDelete.Ok, and is useful for accessing the field via an interface.
func (v *DeviceDeleteInfraDeviceDelete) GetOk() bool { return v.Ok }

// DeviceDeleteResponse is returned by DeviceDelete on success.
type DeviceDeleteResponse struct {
	InfraDeviceDelete DeviceDeleteInfraDeviceDelete `json:"InfraDeviceDelete"`
}

// GetInfraDeviceDelete returns DeviceDeleteResponse.InfraDeviceDelete, and is useful for accessing the field via an interface.
func (v *DeviceDeleteResponse) GetInfraDeviceDelete() DeviceDeleteInfraDeviceDelete {
	return v.InfraDeviceDelete
}

// DeviceInfraDevicePaginatedInfraDevice includes the requested fields of the GraphQL type PaginatedInfraDevice.
type DeviceInfraDevicePaginatedInfraDevice struct {
	Edges []DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice `json:"edges"`
}

// GetEdges returns DeviceInfraDevicePaginatedInfraDevice.Edges, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDevice) GetEdges() []DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice {
	return v.Edges
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice includes the requested fields of the GraphQL type EdgedInfraDevice.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice struct {
	Node DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice `json:"node"`
}

// GetNode returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice.Node, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice) GetNode() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice {
	return v.Node
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice includes the requested fields of the GraphQL type InfraDevice.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice struct {
	// Unique identifier
	Id              string                                                                                                            `json:"id"`
	Name            DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute                        `json:"name"`
	Role            DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown                             `json:"role"`
	Asn             DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem      `json:"asn"`
	Description     DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute                 `json:"description"`
	Device_type     DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType    `json:"device_type"`
	Location        DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGeneric       `json:"location"`
	Platform        DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform         `json:"platform"`
	Primary_address DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress `json:"primary_address"`
	Status          DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown                           `json:"status"`
	Topology        DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology      `json:"topology"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetId() string {
	return v.Id
}

// GetName returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Name, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetName() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute {
	return v.Name
}

// GetRole returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Role, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetRole() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown {
	return v.Role
}

// GetAsn returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Asn, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetAsn() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem {
	return v.Asn
}

// GetDescription returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Description, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetDescription() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute {
	return v.Description
}

// GetDevice_type returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Device_type, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetDevice_type() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType {
	return v.Device_type
}

// GetLocation returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Location, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetLocation() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGeneric {
	return v.Location
}

// GetPlatform returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Platform, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetPlatform() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform {
	return v.Platform
}

// GetPrimary_address returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Primary_address, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetPrimary_address() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress {
	return v.Primary_address
}

// GetStatus returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Status, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetStatus() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown {
	return v.Status
}

// GetTopology returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Topology, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetTopology() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology {
	return v.Topology
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem includes the requested fields of the GraphQL type NestedEdgedInfraAutonomousSystem.
// The GraphQL type's documentation follows.
//
// An Autonomous System (AS) is a set of Internet routable IP prefixes belonging to a network
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem struct {
	Node DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem `json:"node"`
}

// GetNode returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem.Node, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem) GetNode() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem {
	return v.Node
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem includes the requested fields of the GraphQL type InfraAutonomousSystem.
// The GraphQL type's documentation follows.
//
// An Autonomous System (AS) is a set of Internet routable IP prefixes belonging to a network
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute struct {
	Id    string `json:"id"`
	Value string `json:"value"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute) GetId() string {
	return v.Id
}

// GetValue returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute) GetValue() string {
	return v.Value
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType includes the requested fields of the GraphQL type NestedEdgedInfraDeviceType.
// The GraphQL type's documentation follows.
//
// A model of device
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType struct {
	Node DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType `json:"node"`
}

// GetNode returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType.Node, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType) GetNode() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType {
	return v.Node
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType includes the requested fields of the GraphQL type InfraDeviceType.
// The GraphQL type's documentation follows.
//
// A model of device
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGeneric includes the requested fields of the GraphQL type NestedEdgedLocationGeneric.
// The GraphQL type's documentation follows.
//
// Generic Location Interface.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGeneric struct {
	Node DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric `json:"-"`
}

// GetNode returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGeneric.Node, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGeneric) GetNode() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric {
	return v.Node
}

func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGeneric) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGeneric
		Node json.RawMessage `json:"node"`
		graphql.NoUnmarshalJSON
	}
	firstPass.DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGeneric = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Node
		src := firstPass.Node
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalDeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGeneric.Node: %w", err)
			}
		}
	}
	return nil
}

type __premarshalDeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGeneric struct {
	Node json.RawMessage `json:"node"`
}

func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGeneric) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGeneric) __premarshalJSON() (*__premarshalDeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGeneric, error) {
	var retval __premarshalDeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGeneric

	{

		dst := &retval.Node
		src := v.Node
		var err error
		*dst, err = __marshalDeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGeneric.Node: %w", err)
		}
	}
	return &retval, nil
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding includes the requested fields of the GraphQL type LocationBuilding.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding.Typename, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent includes the requested fields of the GraphQL type LocationContinent.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent.Typename, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry includes the requested fields of the GraphQL type LocationCountry.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry.Typename, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor includes the requested fields of the GraphQL type LocationFloor.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor.Typename, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric includes the requested fields of the GraphQL interface LocationGeneric.
//
// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric is implemented by the following types:
// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding
// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent
// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry
// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor
// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro
// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack
// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion
// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite
// The GraphQL type's documentation follows.
//
// Generic Location Interface.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric interface {
	implementsGraphQLInterfaceDeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
	// GetId returns the interface-field "id" from its implementation.
	// The GraphQL interface field's documentation follows.
	//
	// Unique identifier
	GetId() string
}

func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding) implementsGraphQLInterfaceDeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent) implementsGraphQLInterfaceDeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry) implementsGraphQLInterfaceDeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor) implementsGraphQLInterfaceDeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro) implementsGraphQLInterfaceDeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack) implementsGraphQLInterfaceDeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion) implementsGraphQLInterfaceDeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite) implementsGraphQLInterfaceDeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}

func __unmarshalDeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric(b []byte, v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "LocationBuilding":
		*v = new(DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding)
		return json.Unmarshal(b, *v)
	case "LocationContinent":
		*v = new(DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent)
		return json.Unmarshal(b, *v)
	case "LocationCountry":
		*v = new(DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry)
		return json.Unmarshal(b, *v)
	case "LocationFloor":
		*v = new(DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor)
		return json.Unmarshal(b, *v)
	case "LocationMetro":
		*v = new(DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro)
		return json.Unmarshal(b, *v)
	case "LocationRack":
		*v = new(DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack)
		return json.Unmarshal(b, *v)
	case "LocationRegion":
		*v = new(DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion)
		return json.Unmarshal(b, *v)
	case "LocationSuite":
		*v = new(DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing LocationGeneric.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric: "%v"`, tn.TypeName)
	}
}

func __marshalDeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric(v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding:
		typename = "LocationBuilding"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding
		}{typename, v}
		return json.Marshal(result)
	case *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent:
		typename = "LocationContinent"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent
		}{typename, v}
		return json.Marshal(result)
	case *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry:
		typename = "LocationCountry"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry
		}{typename, v}
		return json.Marshal(result)
	case *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor:
		typename = "LocationFloor"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor
		}{typename, v}
		return json.Marshal(result)
	case *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro:
		typename = "LocationMetro"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro
		}{typename, v}
		return json.Marshal(result)
	case *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack:
		typename = "LocationRack"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack
		}{typename, v}
		return json.Marshal(result)
	case *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion:
		typename = "LocationRegion"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion
		}{typename, v}
		return json.Marshal(result)
	case *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite:
		typename = "LocationSuite"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric: "%T"`, v)
	}
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro includes the requested fields of the GraphQL type LocationMetro.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro.Typename, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack includes the requested fields of the GraphQL type LocationRack.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack.Typename, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion includes the requested fields of the GraphQL type LocationRegion.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion.Typename, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite includes the requested fields of the GraphQL type LocationSuite.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite.Typename, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute) GetValue() string {
	return v.Value
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform includes the requested fields of the GraphQL type NestedEdgedInfraPlatform.
// The GraphQL type's documentation follows.
//
// A Platform represent the type of software running on a device.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform struct {
	Node DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform `json:"node"`
}

// GetNode returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform.Node, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform) GetNode() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform {
	return v.Node
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform includes the requested fields of the GraphQL type InfraPlatform.
// The GraphQL type's documentation follows.
//
// A Platform represent the type of software running on a device.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress includes the requested fields of the GraphQL type NestedEdgedInfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress struct {
	Node DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress `json:"node"`
}

// GetNode returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress.Node, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress) GetNode() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress {
	return v.Node
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress includes the requested fields of the GraphQL type InfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown includes the requested fields of the GraphQL type Dropdown.
// The GraphQL type's documentation follows.
//
// Attribute of type Dropdown
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown struct {
	Value string `json:"value"`
	Id    string `json:"id"`
}

// GetValue returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown.Value, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown) GetValue() string {
	return v.Value
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown includes the requested fields of the GraphQL type Dropdown.
// The GraphQL type's documentation follows.
//
// Attribute of type Dropdown
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown struct {
	Id    string `json:"id"`
	Value string `json:"value"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown) GetId() string {
	return v.Id
}

// GetValue returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown.Value, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown) GetValue() string {
	return v.Value
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology includes the requested fields of the GraphQL type NestedEdgedTopologyTopology.
// The GraphQL type's documentation follows.
//
// A Topology represents the entire network pod.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology struct {
	Node DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology `json:"node"`
}

// GetNode returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology.Node, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology) GetNode() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology {
	return v.Node
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology includes the requested fields of the GraphQL type TopologyTopology.
// The GraphQL type's documentation follows.
//
// A Topology represents the entire network pod.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology struct {
	// Unique identifier
	Id   string                                                                                                                                            `json:"id"`
	Name DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute `json:"name"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology) GetId() string {
	return v.Id
}

// GetName returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology.Name, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology) GetName() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute {
	return v.Name
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute) GetValue() string {
	return v.Value
}

// DeviceResponse is returned by Device on success.
type DeviceResponse struct {
	InfraDevice DeviceInfraDevicePaginatedInfraDevice `json:"InfraDevice"`
}

// GetInfraDevice returns DeviceResponse.InfraDevice, and is useful for accessing the field via an interface.
func (v *DeviceResponse) GetInfraDevice() DeviceInfraDevicePaginatedInfraDevice { return v.InfraDevice }

// DeviceUpsertInfraDeviceUpsert includes the requested fields of the GraphQL type InfraDeviceUpsert.
type DeviceUpsertInfraDeviceUpsert struct {
	Object   DeviceUpsertInfraDeviceUpsertObjectInfraDevice `json:"object"`
	Typename string                                         `json:"__typename"`
}

// GetObject returns DeviceUpsertInfraDeviceUpsert.Object, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsert) GetObject() DeviceUpsertInfraDeviceUpsertObjectInfraDevice {
	return v.Object
}

// GetTypename returns DeviceUpsertInfraDeviceUpsert.Typename, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsert) GetTypename() string { return v.Typename }

// DeviceUpsertInfraDeviceUpsertObjectInfraDevice includes the requested fields of the GraphQL type InfraDevice.
type DeviceUpsertInfraDeviceUpsertObjectInfraDevice struct {
	// Unique identifier
	Id              string                                                                                 `json:"id"`
	Display_label   string                                                                                 `json:"display_label"`
	Typename        string                                                                                 `json:"__typename"`
	Name            DeviceUpsertInfraDeviceUpsertObjectInfraDeviceNameTextAttribute                        `json:"name"`
	Role            DeviceUpsertInfraDeviceUpsertObjectInfraDeviceRoleDropdown                             `json:"role"`
	Asn             DeviceUpsertInfraDeviceUpsertObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystem      `json:"asn"`
	Description     DeviceUpsertInfraDeviceUpsertObjectInfraDeviceDescriptionTextAttribute                 `json:"description"`
	Device_type     DeviceUpsertInfraDeviceUpsertObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceType    `json:"device_type"`
	Location        DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGeneric       `json:"location"`
	Platform        DeviceUpsertInfraDeviceUpsertObjectInfraDevicePlatformNestedEdgedInfraPlatform         `json:"platform"`
	Primary_address DeviceUpsertInfraDeviceUpsertObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddress `json:"primary_address"`
	Status          DeviceUpsertInfraDeviceUpsertObjectInfraDeviceStatusDropdown                           `json:"status"`
	Topology        DeviceUpsertInfraDeviceUpsertObjectInfraDeviceTopologyNestedEdgedTopologyTopology      `json:"topology"`
}

// GetId returns DeviceUpsertInfraDeviceUpsertObjectInfraDevice.Id, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDevice) GetId() string { return v.Id }

// GetDisplay_label returns DeviceUpsertInfraDeviceUpsertObjectInfraDevice.Display_label, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDevice) GetDisplay_label() string {
	return v.Display_label
}

// GetTypename returns DeviceUpsertInfraDeviceUpsertObjectInfraDevice.Typename, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDevice) GetTypename() string { return v.Typename }

// GetName returns DeviceUpsertInfraDeviceUpsertObjectInfraDevice.Name, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDevice) GetName() DeviceUpsertInfraDeviceUpsertObjectInfraDeviceNameTextAttribute {
	return v.Name
}

// GetRole returns DeviceUpsertInfraDeviceUpsertObjectInfraDevice.Role, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDevice) GetRole() DeviceUpsertInfraDeviceUpsertObjectInfraDeviceRoleDropdown {
	return v.Role
}

// GetAsn returns DeviceUpsertInfraDeviceUpsertObjectInfraDevice.Asn, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDevice) GetAsn() DeviceUpsertInfraDeviceUpsertObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystem {
	return v.Asn
}

// GetDescription returns DeviceUpsertInfraDeviceUpsertObjectInfraDevice.Description, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDevice) GetDescription() DeviceUpsertInfraDeviceUpsertObjectInfraDeviceDescriptionTextAttribute {
	return v.Description
}

// GetDevice_type returns DeviceUpsertInfraDeviceUpsertObjectInfraDevice.Device_type, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDevice) GetDevice_type() DeviceUpsertInfraDeviceUpsertObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceType {
	return v.Device_type
}

// GetLocation returns DeviceUpsertInfraDeviceUpsertObjectInfraDevice.Location, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDevice) GetLocation() DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGeneric {
	return v.Location
}

// GetPlatform returns DeviceUpsertInfraDeviceUpsertObjectInfraDevice.Platform, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDevice) GetPlatform() DeviceUpsertInfraDeviceUpsertObjectInfraDevicePlatformNestedEdgedInfraPlatform {
	return v.Platform
}

// GetPrimary_address returns DeviceUpsertInfraDeviceUpsertObjectInfraDevice.Primary_address, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDevice) GetPrimary_address() DeviceUpsertInfraDeviceUpsertObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddress {
	return v.Primary_address
}

// GetStatus returns DeviceUpsertInfraDeviceUpsertObjectInfraDevice.Status, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDevice) GetStatus() DeviceUpsertInfraDeviceUpsertObjectInfraDeviceStatusDropdown {
	return v.Status
}

// GetTopology returns DeviceUpsertInfraDeviceUpsertObjectInfraDevice.Topology, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDevice) GetTopology() DeviceUpsertInfraDeviceUpsertObjectInfraDeviceTopologyNestedEdgedTopologyTopology {
	return v.Topology
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystem includes the requested fields of the GraphQL type NestedEdgedInfraAutonomousSystem.
// The GraphQL type's documentation follows.
//
// An Autonomous System (AS) is a set of Internet routable IP prefixes belonging to a network
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystem struct {
	Node DeviceUpsertInfraDeviceUpsertObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem `json:"node"`
}

// GetNode returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystem.Node, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystem) GetNode() DeviceUpsertInfraDeviceUpsertObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem {
	return v.Node
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem includes the requested fields of the GraphQL type InfraAutonomousSystem.
// The GraphQL type's documentation follows.
//
// An Autonomous System (AS) is a set of Internet routable IP prefixes belonging to a network
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem.Id, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem) GetId() string {
	return v.Id
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceDescriptionTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceDescriptionTextAttribute struct {
	Id    string `json:"id"`
	Value string `json:"value"`
}

// GetId returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceDescriptionTextAttribute.Id, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceDescriptionTextAttribute) GetId() string {
	return v.Id
}

// GetValue returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceDescriptionTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceDescriptionTextAttribute) GetValue() string {
	return v.Value
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceType includes the requested fields of the GraphQL type NestedEdgedInfraDeviceType.
// The GraphQL type's documentation follows.
//
// A model of device
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceType struct {
	Node DeviceUpsertInfraDeviceUpsertObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType `json:"node"`
}

// GetNode returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceType.Node, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceType) GetNode() DeviceUpsertInfraDeviceUpsertObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType {
	return v.Node
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType includes the requested fields of the GraphQL type InfraDeviceType.
// The GraphQL type's documentation follows.
//
// A model of device
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType.Id, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType) GetId() string {
	return v.Id
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGeneric includes the requested fields of the GraphQL type NestedEdgedLocationGeneric.
// The GraphQL type's documentation follows.
//
// Generic Location Interface.
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGeneric struct {
	Node DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric `json:"-"`
}

// GetNode returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGeneric.Node, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGeneric) GetNode() DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric {
	return v.Node
}

func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGeneric) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGeneric
		Node json.RawMessage `json:"node"`
		graphql.NoUnmarshalJSON
	}
	firstPass.DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGeneric = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Node
		src := firstPass.Node
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalDeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGeneric.Node: %w", err)
			}
		}
	}
	return nil
}

type __premarshalDeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGeneric struct {
	Node json.RawMessage `json:"node"`
}

func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGeneric) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGeneric) __premarshalJSON() (*__premarshalDeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGeneric, error) {
	var retval __premarshalDeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGeneric

	{

		dst := &retval.Node
		src := v.Node
		var err error
		*dst, err = __marshalDeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGeneric.Node: %w", err)
		}
	}
	return &retval, nil
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding includes the requested fields of the GraphQL type LocationBuilding.
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding.Typename, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding.Id, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding) GetId() string {
	return v.Id
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent includes the requested fields of the GraphQL type LocationContinent.
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent.Typename, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent.Id, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent) GetId() string {
	return v.Id
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry includes the requested fields of the GraphQL type LocationCountry.
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry.Typename, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry.Id, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry) GetId() string {
	return v.Id
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor includes the requested fields of the GraphQL type LocationFloor.
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor.Typename, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor.Id, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor) GetId() string {
	return v.Id
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric includes the requested fields of the GraphQL interface LocationGeneric.
//
// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric is implemented by the following types:
// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding
// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent
// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry
// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor
// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro
// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack
// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion
// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite
// The GraphQL type's documentation follows.
//
// Generic Location Interface.
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric interface {
	implementsGraphQLInterfaceDeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
	// GetId returns the interface-field "id" from its implementation.
	// The GraphQL interface field's documentation follows.
	//
	// Unique identifier
	GetId() string
}

func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding) implementsGraphQLInterfaceDeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent) implementsGraphQLInterfaceDeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry) implementsGraphQLInterfaceDeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor) implementsGraphQLInterfaceDeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro) implementsGraphQLInterfaceDeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack) implementsGraphQLInterfaceDeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion) implementsGraphQLInterfaceDeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite) implementsGraphQLInterfaceDeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric() {
}

func __unmarshalDeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric(b []byte, v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "LocationBuilding":
		*v = new(DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding)
		return json.Unmarshal(b, *v)
	case "LocationContinent":
		*v = new(DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent)
		return json.Unmarshal(b, *v)
	case "LocationCountry":
		*v = new(DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry)
		return json.Unmarshal(b, *v)
	case "LocationFloor":
		*v = new(DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor)
		return json.Unmarshal(b, *v)
	case "LocationMetro":
		*v = new(DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro)
		return json.Unmarshal(b, *v)
	case "LocationRack":
		*v = new(DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack)
		return json.Unmarshal(b, *v)
	case "LocationRegion":
		*v = new(DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion)
		return json.Unmarshal(b, *v)
	case "LocationSuite":
		*v = new(DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing LocationGeneric.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric: "%v"`, tn.TypeName)
	}
}

func __marshalDeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric(v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding:
		typename = "LocationBuilding"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationBuilding
		}{typename, v}
		return json.Marshal(result)
	case *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent:
		typename = "LocationContinent"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationContinent
		}{typename, v}
		return json.Marshal(result)
	case *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry:
		typename = "LocationCountry"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationCountry
		}{typename, v}
		return json.Marshal(result)
	case *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor:
		typename = "LocationFloor"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationFloor
		}{typename, v}
		return json.Marshal(result)
	case *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro:
		typename = "LocationMetro"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro
		}{typename, v}
		return json.Marshal(result)
	case *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack:
		typename = "LocationRack"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack
		}{typename, v}
		return json.Marshal(result)
	case *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion:
		typename = "LocationRegion"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion
		}{typename, v}
		return json.Marshal(result)
	case *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite:
		typename = "LocationSuite"

		result := struct {
			TypeName string `json:"__typename"`
			*DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationGeneric: "%T"`, v)
	}
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro includes the requested fields of the GraphQL type LocationMetro.
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro.Typename, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro.Id, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationMetro) GetId() string {
	return v.Id
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack includes the requested fields of the GraphQL type LocationRack.
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack.Typename, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack.Id, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRack) GetId() string {
	return v.Id
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion includes the requested fields of the GraphQL type LocationRegion.
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion.Typename, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion.Id, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationRegion) GetId() string {
	return v.Id
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite includes the requested fields of the GraphQL type LocationSuite.
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite struct {
	Typename string `json:"__typename"`
	// Unique identifier
	Id string `json:"id"`
}

// GetTypename returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite.Typename, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite) GetTypename() string {
	return v.Typename
}

// GetId returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite.Id, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceLocationNestedEdgedLocationGenericNodeLocationSuite) GetId() string {
	return v.Id
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceNameTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceNameTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceNameTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceNameTextAttribute) GetValue() string {
	return v.Value
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDevicePlatformNestedEdgedInfraPlatform includes the requested fields of the GraphQL type NestedEdgedInfraPlatform.
// The GraphQL type's documentation follows.
//
// A Platform represent the type of software running on a device.
type DeviceUpsertInfraDeviceUpsertObjectInfraDevicePlatformNestedEdgedInfraPlatform struct {
	Node DeviceUpsertInfraDeviceUpsertObjectInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform `json:"node"`
}

// GetNode returns DeviceUpsertInfraDeviceUpsertObjectInfraDevicePlatformNestedEdgedInfraPlatform.Node, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDevicePlatformNestedEdgedInfraPlatform) GetNode() DeviceUpsertInfraDeviceUpsertObjectInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform {
	return v.Node
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform includes the requested fields of the GraphQL type InfraPlatform.
// The GraphQL type's documentation follows.
//
// A Platform represent the type of software running on a device.
type DeviceUpsertInfraDeviceUpsertObjectInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DeviceUpsertInfraDeviceUpsertObjectInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform.Id, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform) GetId() string {
	return v.Id
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddress includes the requested fields of the GraphQL type NestedEdgedInfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type DeviceUpsertInfraDeviceUpsertObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddress struct {
	Node DeviceUpsertInfraDeviceUpsertObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress `json:"node"`
}

// GetNode returns DeviceUpsertInfraDeviceUpsertObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddress.Node, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddress) GetNode() DeviceUpsertInfraDeviceUpsertObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress {
	return v.Node
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress includes the requested fields of the GraphQL type InfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type DeviceUpsertInfraDeviceUpsertObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DeviceUpsertInfraDeviceUpsertObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress.Id, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress) GetId() string {
	return v.Id
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceRoleDropdown includes the requested fields of the GraphQL type Dropdown.
// The GraphQL type's documentation follows.
//
// Attribute of type Dropdown
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceRoleDropdown struct {
	Value string `json:"value"`
	Id    string `json:"id"`
}

// GetValue returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceRoleDropdown.Value, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceRoleDropdown) GetValue() string {
	return v.Value
}

// GetId returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceRoleDropdown.Id, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceRoleDropdown) GetId() string { return v.Id }

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceStatusDropdown includes the requested fields of the GraphQL type Dropdown.
// The GraphQL type's documentation follows.
//
// Attribute of type Dropdown
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceStatusDropdown struct {
	Id    string `json:"id"`
	Value string `json:"value"`
}

// GetId returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceStatusDropdown.Id, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceStatusDropdown) GetId() string { return v.Id }

// GetValue returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceStatusDropdown.Value, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceStatusDropdown) GetValue() string {
	return v.Value
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceTopologyNestedEdgedTopologyTopology includes the requested fields of the GraphQL type NestedEdgedTopologyTopology.
// The GraphQL type's documentation follows.
//
// A Topology represents the entire network pod.
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceTopologyNestedEdgedTopologyTopology struct {
	Node DeviceUpsertInfraDeviceUpsertObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology `json:"node"`
}

// GetNode returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceTopologyNestedEdgedTopologyTopology.Node, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceTopologyNestedEdgedTopologyTopology) GetNode() DeviceUpsertInfraDeviceUpsertObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology {
	return v.Node
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology includes the requested fields of the GraphQL type TopologyTopology.
// The GraphQL type's documentation follows.
//
// A Topology represents the entire network pod.
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology struct {
	// Unique identifier
	Id   string                                                                                                                 `json:"id"`
	Name DeviceUpsertInfraDeviceUpsertObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute `json:"name"`
}

// GetId returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology.Id, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology) GetId() string {
	return v.Id
}

// GetName returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology.Name, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology) GetName() DeviceUpsertInfraDeviceUpsertObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute {
	return v.Name
}

// DeviceUpsertInfraDeviceUpsertObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type DeviceUpsertInfraDeviceUpsertObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns DeviceUpsertInfraDeviceUpsertObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *DeviceUpsertInfraDeviceUpsertObjectInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute) GetValue() string {
	return v.Value
}

// DeviceUpsertResponse is returned by DeviceUpsert on success.
type DeviceUpsertResponse struct {
	InfraDeviceUpsert DeviceUpsertInfraDeviceUpsert `json:"InfraDeviceUpsert"`
}

// GetInfraDeviceUpsert returns DeviceUpsertResponse.InfraDeviceUpsert, and is useful for accessing the field via an interface.
func (v *DeviceUpsertResponse) GetInfraDeviceUpsert() DeviceUpsertInfraDeviceUpsert {
	return v.InfraDeviceUpsert
}

// DevicequeryInfraDevicePaginatedInfraDevice includes the requested fields of the GraphQL type PaginatedInfraDevice.
type DevicequeryInfraDevicePaginatedInfraDevice struct {
	Edges []DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice `json:"edges"`
}

// GetEdges returns DevicequeryInfraDevicePaginatedInfraDevice.Edges, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDevice) GetEdges() []DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice {
	return v.Edges
}

// DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice includes the requested fields of the GraphQL type EdgedInfraDevice.
type DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice struct {
	Node DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice `json:"node"`
}

// GetNode returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice.Node, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice) GetNode() DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice {
	return v.Node
}

// DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice includes the requested fields of the GraphQL type InfraDevice.
type DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice struct {
	// Unique identifier
	Id              string                                                                                                                 `json:"id"`
	Name            DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute                        `json:"name"`
	Role            DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown                             `json:"role"`
	Platform        DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform         `json:"platform"`
	Primary_address DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress `json:"primary_address"`
	Status          DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown                           `json:"status"`
	Topology        DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology      `json:"topology"`
	Device_type     DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType    `json:"device_type"`
	Asn             DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem      `json:"asn"`
	Description     DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute                 `json:"description"`
}

// GetId returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Id, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetId() string {
	return v.Id
}

// GetName returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Name, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetName() DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute {
	return v.Name
}

// GetRole returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Role, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetRole() DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown {
	return v.Role
}

// GetPlatform returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Platform, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetPlatform() DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform {
	return v.Platform
}

// GetPrimary_address returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Primary_address, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetPrimary_address() DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress {
	return v.Primary_address
}

// GetStatus returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Status, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetStatus() DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown {
	return v.Status
}

// GetTopology returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Topology, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetTopology() DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology {
	return v.Topology
}

// GetDevice_type returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Device_type, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetDevice_type() DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType {
	return v.Device_type
}

// GetAsn returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Asn, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetAsn() DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem {
	return v.Asn
}

// GetDescription returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Description, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetDescription() DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute {
	return v.Description
}

// DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem includes the requested fields of the GraphQL type NestedEdgedInfraAutonomousSystem.
// The GraphQL type's documentation follows.
//
// An Autonomous System (AS) is a set of Internet routable IP prefixes belonging to a network
type DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem struct {
	Node DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem `json:"node"`
}

// GetNode returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem.Node, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem) GetNode() DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem {
	return v.Node
}

// DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem includes the requested fields of the GraphQL type InfraAutonomousSystem.
// The GraphQL type's documentation follows.
//
// An Autonomous System (AS) is a set of Internet routable IP prefixes belonging to a network
type DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem struct {
	Asn DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute `json:"asn"`
}

// GetAsn returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem.Asn, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem) GetAsn() DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute {
	return v.Asn
}

// DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute includes the requested fields of the GraphQL type NumberAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Number
type DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute struct {
	Id string `json:"id"`
}

// GetId returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute.Id, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute) GetId() string {
	return v.Id
}

// DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute) GetValue() string {
	return v.Value
}

// DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType includes the requested fields of the GraphQL type NestedEdgedInfraDeviceType.
// The GraphQL type's documentation follows.
//
// A model of device
type DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType struct {
	Node DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType `json:"node"`
}

// GetNode returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType.Node, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType) GetNode() DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType {
	return v.Node
}

// DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType includes the requested fields of the GraphQL type InfraDeviceType.
// The GraphQL type's documentation follows.
//
// A model of device
type DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType.Id, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType) GetId() string {
	return v.Id
}

// DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute) GetValue() string {
	return v.Value
}

// DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform includes the requested fields of the GraphQL type NestedEdgedInfraPlatform.
// The GraphQL type's documentation follows.
//
// A Platform represent the type of software running on a device.
type DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform struct {
	Node DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform `json:"node"`
}

// GetNode returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform.Node, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform) GetNode() DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform {
	return v.Node
}

// DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform includes the requested fields of the GraphQL type InfraPlatform.
// The GraphQL type's documentation follows.
//
// A Platform represent the type of software running on a device.
type DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform.Id, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform) GetId() string {
	return v.Id
}

// DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress includes the requested fields of the GraphQL type NestedEdgedInfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress struct {
	Node DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress `json:"node"`
}

// GetNode returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress.Node, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress) GetNode() DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress {
	return v.Node
}

// DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress includes the requested fields of the GraphQL type InfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress.Id, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress) GetId() string {
	return v.Id
}

// DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown includes the requested fields of the GraphQL type Dropdown.
// The GraphQL type's documentation follows.
//
// Attribute of type Dropdown
type DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown struct {
	Value       string `json:"value"`
	Color       string `json:"color"`
	Description string `json:"description"`
	Id          string `json:"id"`
}

// GetValue returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown.Value, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown) GetValue() string {
	return v.Value
}

// GetColor returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown.Color, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown) GetColor() string {
	return v.Color
}

// GetDescription returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown.Description, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown) GetDescription() string {
	return v.Description
}

// GetId returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown.Id, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown) GetId() string {
	return v.Id
}

// DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown includes the requested fields of the GraphQL type Dropdown.
// The GraphQL type's documentation follows.
//
// Attribute of type Dropdown
type DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown struct {
	Id string `json:"id"`
}

// GetId returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown.Id, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown) GetId() string {
	return v.Id
}

// DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology includes the requested fields of the GraphQL type NestedEdgedTopologyTopology.
// The GraphQL type's documentation follows.
//
// A Topology represents the entire network pod.
type DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology struct {
	Node DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology `json:"node"`
}

// GetNode returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology.Node, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology) GetNode() DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology {
	return v.Node
}

// DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology includes the requested fields of the GraphQL type TopologyTopology.
// The GraphQL type's documentation follows.
//
// A Topology represents the entire network pod.
type DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology.Id, and is useful for accessing the field via an interface.
func (v *DevicequeryInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology) GetId() string {
	return v.Id
}

// DevicequeryResponse is returned by Devicequery on success.
type DevicequeryResponse struct {
	InfraDevice DevicequeryInfraDevicePaginatedInfraDevice `json:"InfraDevice"`
}

// GetInfraDevice returns DevicequeryResponse.InfraDevice, and is useful for accessing the field via an interface.
func (v *DevicequeryResponse) GetInfraDevice() DevicequeryInfraDevicePaginatedInfraDevice {
	return v.InfraDevice
}

// DevicesInfraDevicePaginatedInfraDevice includes the requested fields of the GraphQL type PaginatedInfraDevice.
type DevicesInfraDevicePaginatedInfraDevice struct {
	Edges []DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice `json:"edges"`
}

// GetEdges returns DevicesInfraDevicePaginatedInfraDevice.Edges, and is useful for accessing the field via an interface.
func (v *DevicesInfraDevicePaginatedInfraDevice) GetEdges() []DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice {
	return v.Edges
}

// DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice includes the requested fields of the GraphQL type EdgedInfraDevice.
type DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice struct {
	Node DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice `json:"node"`
}

// GetNode returns DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice.Node, and is useful for accessing the field via an interface.
func (v *DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice) GetNode() DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice {
	return v.Node
}

// DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice includes the requested fields of the GraphQL type InfraDevice.
type DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice struct {
	// Unique identifier
	Id   string                                                                                      `json:"id"`
	Name DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute `json:"name"`
	Role DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown      `json:"role"`
}

// GetId returns DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Id, and is useful for accessing the field via an interface.
func (v *DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetId() string {
	return v.Id
}

// GetName returns DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Name, and is useful for accessing the field via an interface.
func (v *DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetName() DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute {
	return v.Name
}

// GetRole returns DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Role, and is useful for accessing the field via an interface.
func (v *DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetRole() DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown {
	return v.Role
}

// DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute) GetValue() string {
	return v.Value
}

// DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown includes the requested fields of the GraphQL type Dropdown.
// The GraphQL type's documentation follows.
//
// Attribute of type Dropdown
type DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown struct {
	Value string `json:"value"`
	Color string `json:"color"`
}

// GetValue returns DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown.Value, and is useful for accessing the field via an interface.
func (v *DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown) GetValue() string {
	return v.Value
}

// GetColor returns DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown.Color, and is useful for accessing the field via an interface.
func (v *DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown) GetColor() string {
	return v.Color
}

// DevicesResponse is returned by Devices on success.
type DevicesResponse struct {
	InfraDevice DevicesInfraDevicePaginatedInfraDevice `json:"InfraDevice"`
}

// GetInfraDevice returns DevicesResponse.InfraDevice, and is useful for accessing the field via an interface.
func (v *DevicesResponse) GetInfraDevice() DevicesInfraDevicePaginatedInfraDevice {
	return v.InfraDevice
}

// DevicetypeInfraDeviceTypePaginatedInfraDeviceType includes the requested fields of the GraphQL type PaginatedInfraDeviceType.
// The GraphQL type's documentation follows.
//
// A model of device
type DevicetypeInfraDeviceTypePaginatedInfraDeviceType struct {
	Edges []DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceType `json:"edges"`
}

// GetEdges returns DevicetypeInfraDeviceTypePaginatedInfraDeviceType.Edges, and is useful for accessing the field via an interface.
func (v *DevicetypeInfraDeviceTypePaginatedInfraDeviceType) GetEdges() []DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceType {
	return v.Edges
}

// DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceType includes the requested fields of the GraphQL type EdgedInfraDeviceType.
// The GraphQL type's documentation follows.
//
// A model of device
type DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceType struct {
	Node DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceType `json:"node"`
}

// GetNode returns DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceType.Node, and is useful for accessing the field via an interface.
func (v *DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceType) GetNode() DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceType {
	return v.Node
}

// DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceType includes the requested fields of the GraphQL type InfraDeviceType.
// The GraphQL type's documentation follows.
//
// A model of device
type DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceType struct {
	// Unique identifier
	Id          string                                                                                                                        `json:"id"`
	Platform    DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypePlatformNestedEdgedInfraPlatform `json:"platform"`
	Description DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypeDescriptionTextAttribute         `json:"description"`
	Name        DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypeNameTextAttribute                `json:"name"`
	Weight      DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypeWeightNumberAttribute            `json:"weight"`
}

// GetId returns DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceType.Id, and is useful for accessing the field via an interface.
func (v *DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceType) GetId() string {
	return v.Id
}

// GetPlatform returns DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceType.Platform, and is useful for accessing the field via an interface.
func (v *DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceType) GetPlatform() DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypePlatformNestedEdgedInfraPlatform {
	return v.Platform
}

// GetDescription returns DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceType.Description, and is useful for accessing the field via an interface.
func (v *DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceType) GetDescription() DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypeDescriptionTextAttribute {
	return v.Description
}

// GetName returns DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceType.Name, and is useful for accessing the field via an interface.
func (v *DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceType) GetName() DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypeNameTextAttribute {
	return v.Name
}

// GetWeight returns DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceType.Weight, and is useful for accessing the field via an interface.
func (v *DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceType) GetWeight() DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypeWeightNumberAttribute {
	return v.Weight
}

// DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypeDescriptionTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypeDescriptionTextAttribute struct {
	Id    string `json:"id"`
	Value string `json:"value"`
}

// GetId returns DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypeDescriptionTextAttribute.Id, and is useful for accessing the field via an interface.
func (v *DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypeDescriptionTextAttribute) GetId() string {
	return v.Id
}

// GetValue returns DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypeDescriptionTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypeDescriptionTextAttribute) GetValue() string {
	return v.Value
}

// DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypeNameTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypeNameTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypeNameTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypeNameTextAttribute) GetValue() string {
	return v.Value
}

// DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypePlatformNestedEdgedInfraPlatform includes the requested fields of the GraphQL type NestedEdgedInfraPlatform.
// The GraphQL type's documentation follows.
//
// A Platform represent the type of software running on a device.
type DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypePlatformNestedEdgedInfraPlatform struct {
	Node DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypePlatformNestedEdgedInfraPlatformNodeInfraPlatform `json:"node"`
}

// GetNode returns DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypePlatformNestedEdgedInfraPlatform.Node, and is useful for accessing the field via an interface.
func (v *DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypePlatformNestedEdgedInfraPlatform) GetNode() DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypePlatformNestedEdgedInfraPlatformNodeInfraPlatform {
	return v.Node
}

// DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypePlatformNestedEdgedInfraPlatformNodeInfraPlatform includes the requested fields of the GraphQL type InfraPlatform.
// The GraphQL type's documentation follows.
//
// A Platform represent the type of software running on a device.
type DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypePlatformNestedEdgedInfraPlatformNodeInfraPlatform struct {
	// Unique identifier
	Id   string                                                                                                                                                          `json:"id"`
	Name DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypePlatformNestedEdgedInfraPlatformNodeInfraPlatformNameTextAttribute `json:"name"`
}

// GetId returns DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypePlatformNestedEdgedInfraPlatformNodeInfraPlatform.Id, and is useful for accessing the field via an interface.
func (v *DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypePlatformNestedEdgedInfraPlatformNodeInfraPlatform) GetId() string {
	return v.Id
}

// GetName returns DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypePlatformNestedEdgedInfraPlatformNodeInfraPlatform.Name, and is useful for accessing the field via an interface.
func (v *DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypePlatformNestedEdgedInfraPlatformNodeInfraPlatform) GetName() DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypePlatformNestedEdgedInfraPlatformNodeInfraPlatformNameTextAttribute {
	return v.Name
}

// DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypePlatformNestedEdgedInfraPlatformNodeInfraPlatformNameTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypePlatformNestedEdgedInfraPlatformNodeInfraPlatformNameTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypePlatformNestedEdgedInfraPlatformNodeInfraPlatformNameTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypePlatformNestedEdgedInfraPlatformNodeInfraPlatformNameTextAttribute) GetValue() string {
	return v.Value
}

// DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypeWeightNumberAttribute includes the requested fields of the GraphQL type NumberAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Number
type DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypeWeightNumberAttribute struct {
	Value string `json:"value"`
}

// GetValue returns DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypeWeightNumberAttribute.Value, and is useful for accessing the field via an interface.
func (v *DevicetypeInfraDeviceTypePaginatedInfraDeviceTypeEdgesEdgedInfraDeviceTypeNodeInfraDeviceTypeWeightNumberAttribute) GetValue() string {
	return v.Value
}

// DevicetypeResponse is returned by Devicetype on success.
type DevicetypeResponse struct {
	InfraDeviceType DevicetypeInfraDeviceTypePaginatedInfraDeviceType `json:"InfraDeviceType"`
}

// GetInfraDeviceType returns DevicetypeResponse.InfraDeviceType, and is useful for accessing the field via an interface.
func (v *DevicetypeResponse) GetInfraDeviceType() DevicetypeInfraDeviceTypePaginatedInfraDeviceType {
	return v.InfraDeviceType
}

type GenericPoolInput struct {
	Id         string `json:"id"`
	Identifier string `json:"identifier"`
	Data       string `json:"data"`
}

// GetId returns GenericPoolInput.Id, and is useful for accessing the field via an interface.
func (v *GenericPoolInput) GetId() string { return v.Id }

// GetIdentifier returns GenericPoolInput.Identifier, and is useful for accessing the field via an interface.
func (v *GenericPoolInput) GetIdentifier() string { return v.Identifier }

// GetData returns GenericPoolInput.Data, and is useful for accessing the field via an interface.
func (v *GenericPoolInput) GetData() string { return v.Data }

type IPAddressPoolInput struct {
	Id         string `json:"id"`
	Identifier string `json:"identifier"`
	Data       string `json:"data"`
	Prefixlen  int    `json:"prefixlen"`
}

// GetId returns IPAddressPoolInput.Id, and is useful for accessing the field via an interface.
func (v *IPAddressPoolInput) GetId() string { return v.Id }

// GetIdentifier returns IPAddressPoolInput.Identifier, and is useful for accessing the field via an interface.
func (v *IPAddressPoolInput) GetIdentifier() string { return v.Identifier }

// GetData returns IPAddressPoolInput.Data, and is useful for accessing the field via an interface.
func (v *IPAddressPoolInput) GetData() string { return v.Data }

// GetPrefixlen returns IPAddressPoolInput.Prefixlen, and is useful for accessing the field via an interface.
func (v *IPAddressPoolInput) GetPrefixlen() int { return v.Prefixlen }

type InfraDeviceCreateInput struct {
	Id                   string                    `json:"id"`
	Role                 TextAttributeCreate       `json:"role"`
	Status               TextAttributeCreate       `json:"status"`
	Description          TextAttributeCreate       `json:"description"`
	Name                 TextAttributeCreate       `json:"name"`
	Artifacts            []RelatedNodeInput        `json:"artifacts"`
	Subscriber_of_groups []RelatedNodeInput        `json:"subscriber_of_groups"`
	Member_of_groups     []RelatedNodeInput        `json:"member_of_groups"`
	Platform             RelatedNodeInput          `json:"platform"`
	Device_type          RelatedNodeInput          `json:"device_type"`
	Interfaces           []RelatedNodeInput        `json:"interfaces"`
	Tags                 []RelatedNodeInput        `json:"tags"`
	Asn                  RelatedNodeInput          `json:"asn"`
	Primary_address      RelatedIPAddressNodeInput `json:"primary_address"`
	Profiles             []RelatedNodeInput        `json:"profiles"`
	Topology             RelatedNodeInput          `json:"topology"`
	Location             RelatedNodeInput          `json:"location"`
}

// GetId returns InfraDeviceCreateInput.Id, and is useful for accessing the field via an interface.
func (v *InfraDeviceCreateInput) GetId() string { return v.Id }

// GetRole returns InfraDeviceCreateInput.Role, and is useful for accessing the field via an interface.
func (v *InfraDeviceCreateInput) GetRole() TextAttributeCreate { return v.Role }

// GetStatus returns InfraDeviceCreateInput.Status, and is useful for accessing the field via an interface.
func (v *InfraDeviceCreateInput) GetStatus() TextAttributeCreate { return v.Status }

// GetDescription returns InfraDeviceCreateInput.Description, and is useful for accessing the field via an interface.
func (v *InfraDeviceCreateInput) GetDescription() TextAttributeCreate { return v.Description }

// GetName returns InfraDeviceCreateInput.Name, and is useful for accessing the field via an interface.
func (v *InfraDeviceCreateInput) GetName() TextAttributeCreate { return v.Name }

// GetArtifacts returns InfraDeviceCreateInput.Artifacts, and is useful for accessing the field via an interface.
func (v *InfraDeviceCreateInput) GetArtifacts() []RelatedNodeInput { return v.Artifacts }

// GetSubscriber_of_groups returns InfraDeviceCreateInput.Subscriber_of_groups, and is useful for accessing the field via an interface.
func (v *InfraDeviceCreateInput) GetSubscriber_of_groups() []RelatedNodeInput {
	return v.Subscriber_of_groups
}

// GetMember_of_groups returns InfraDeviceCreateInput.Member_of_groups, and is useful for accessing the field via an interface.
func (v *InfraDeviceCreateInput) GetMember_of_groups() []RelatedNodeInput { return v.Member_of_groups }

// GetPlatform returns InfraDeviceCreateInput.Platform, and is useful for accessing the field via an interface.
func (v *InfraDeviceCreateInput) GetPlatform() RelatedNodeInput { return v.Platform }

// GetDevice_type returns InfraDeviceCreateInput.Device_type, and is useful for accessing the field via an interface.
func (v *InfraDeviceCreateInput) GetDevice_type() RelatedNodeInput { return v.Device_type }

// GetInterfaces returns InfraDeviceCreateInput.Interfaces, and is useful for accessing the field via an interface.
func (v *InfraDeviceCreateInput) GetInterfaces() []RelatedNodeInput { return v.Interfaces }

// GetTags returns InfraDeviceCreateInput.Tags, and is useful for accessing the field via an interface.
func (v *InfraDeviceCreateInput) GetTags() []RelatedNodeInput { return v.Tags }

// GetAsn returns InfraDeviceCreateInput.Asn, and is useful for accessing the field via an interface.
func (v *InfraDeviceCreateInput) GetAsn() RelatedNodeInput { return v.Asn }

// GetPrimary_address returns InfraDeviceCreateInput.Primary_address, and is useful for accessing the field via an interface.
func (v *InfraDeviceCreateInput) GetPrimary_address() RelatedIPAddressNodeInput {
	return v.Primary_address
}

// GetProfiles returns InfraDeviceCreateInput.Profiles, and is useful for accessing the field via an interface.
func (v *InfraDeviceCreateInput) GetProfiles() []RelatedNodeInput { return v.Profiles }

// GetTopology returns InfraDeviceCreateInput.Topology, and is useful for accessing the field via an interface.
func (v *InfraDeviceCreateInput) GetTopology() RelatedNodeInput { return v.Topology }

// GetLocation returns InfraDeviceCreateInput.Location, and is useful for accessing the field via an interface.
func (v *InfraDeviceCreateInput) GetLocation() RelatedNodeInput { return v.Location }

type InfraDeviceUpsertInput struct {
	Id                   string                    `json:"id"`
	Hfid                 []string                  `json:"hfid"`
	Role                 TextAttributeUpdate       `json:"role"`
	Status               TextAttributeUpdate       `json:"status"`
	Description          TextAttributeUpdate       `json:"description"`
	Name                 TextAttributeUpdate       `json:"name"`
	Artifacts            []RelatedNodeInput        `json:"artifacts"`
	Subscriber_of_groups []RelatedNodeInput        `json:"subscriber_of_groups"`
	Member_of_groups     []RelatedNodeInput        `json:"member_of_groups"`
	Platform             RelatedNodeInput          `json:"platform"`
	Device_type          RelatedNodeInput          `json:"device_type"`
	Interfaces           []RelatedNodeInput        `json:"interfaces"`
	Tags                 []RelatedNodeInput        `json:"tags"`
	Asn                  RelatedNodeInput          `json:"asn"`
	Primary_address      RelatedIPAddressNodeInput `json:"primary_address"`
	Profiles             []RelatedNodeInput        `json:"profiles"`
	Topology             RelatedNodeInput          `json:"topology"`
	Location             RelatedNodeInput          `json:"location"`
}

// GetId returns InfraDeviceUpsertInput.Id, and is useful for accessing the field via an interface.
func (v *InfraDeviceUpsertInput) GetId() string { return v.Id }

// GetHfid returns InfraDeviceUpsertInput.Hfid, and is useful for accessing the field via an interface.
func (v *InfraDeviceUpsertInput) GetHfid() []string { return v.Hfid }

// GetRole returns InfraDeviceUpsertInput.Role, and is useful for accessing the field via an interface.
func (v *InfraDeviceUpsertInput) GetRole() TextAttributeUpdate { return v.Role }

// GetStatus returns InfraDeviceUpsertInput.Status, and is useful for accessing the field via an interface.
func (v *InfraDeviceUpsertInput) GetStatus() TextAttributeUpdate { return v.Status }

// GetDescription returns InfraDeviceUpsertInput.Description, and is useful for accessing the field via an interface.
func (v *InfraDeviceUpsertInput) GetDescription() TextAttributeUpdate { return v.Description }

// GetName returns InfraDeviceUpsertInput.Name, and is useful for accessing the field via an interface.
func (v *InfraDeviceUpsertInput) GetName() TextAttributeUpdate { return v.Name }

// GetArtifacts returns InfraDeviceUpsertInput.Artifacts, and is useful for accessing the field via an interface.
func (v *InfraDeviceUpsertInput) GetArtifacts() []RelatedNodeInput { return v.Artifacts }

// GetSubscriber_of_groups returns InfraDeviceUpsertInput.Subscriber_of_groups, and is useful for accessing the field via an interface.
func (v *InfraDeviceUpsertInput) GetSubscriber_of_groups() []RelatedNodeInput {
	return v.Subscriber_of_groups
}

// GetMember_of_groups returns InfraDeviceUpsertInput.Member_of_groups, and is useful for accessing the field via an interface.
func (v *InfraDeviceUpsertInput) GetMember_of_groups() []RelatedNodeInput { return v.Member_of_groups }

// GetPlatform returns InfraDeviceUpsertInput.Platform, and is useful for accessing the field via an interface.
func (v *InfraDeviceUpsertInput) GetPlatform() RelatedNodeInput { return v.Platform }

// GetDevice_type returns InfraDeviceUpsertInput.Device_type, and is useful for accessing the field via an interface.
func (v *InfraDeviceUpsertInput) GetDevice_type() RelatedNodeInput { return v.Device_type }

// GetInterfaces returns InfraDeviceUpsertInput.Interfaces, and is useful for accessing the field via an interface.
func (v *InfraDeviceUpsertInput) GetInterfaces() []RelatedNodeInput { return v.Interfaces }

// GetTags returns InfraDeviceUpsertInput.Tags, and is useful for accessing the field via an interface.
func (v *InfraDeviceUpsertInput) GetTags() []RelatedNodeInput { return v.Tags }

// GetAsn returns InfraDeviceUpsertInput.Asn, and is useful for accessing the field via an interface.
func (v *InfraDeviceUpsertInput) GetAsn() RelatedNodeInput { return v.Asn }

// GetPrimary_address returns InfraDeviceUpsertInput.Primary_address, and is useful for accessing the field via an interface.
func (v *InfraDeviceUpsertInput) GetPrimary_address() RelatedIPAddressNodeInput {
	return v.Primary_address
}

// GetProfiles returns InfraDeviceUpsertInput.Profiles, and is useful for accessing the field via an interface.
func (v *InfraDeviceUpsertInput) GetProfiles() []RelatedNodeInput { return v.Profiles }

// GetTopology returns InfraDeviceUpsertInput.Topology, and is useful for accessing the field via an interface.
func (v *InfraDeviceUpsertInput) GetTopology() RelatedNodeInput { return v.Topology }

// GetLocation returns InfraDeviceUpsertInput.Location, and is useful for accessing the field via an interface.
func (v *InfraDeviceUpsertInput) GetLocation() RelatedNodeInput { return v.Location }

// InterfaceInfraIPAddressPaginatedInfraIPAddress includes the requested fields of the GraphQL type PaginatedInfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type InterfaceInfraIPAddressPaginatedInfraIPAddress struct {
	Edges []InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddress `json:"edges"`
}

// GetEdges returns InterfaceInfraIPAddressPaginatedInfraIPAddress.Edges, and is useful for accessing the field via an interface.
func (v *InterfaceInfraIPAddressPaginatedInfraIPAddress) GetEdges() []InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddress {
	return v.Edges
}

// InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddress includes the requested fields of the GraphQL type EdgedInfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddress struct {
	Node InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress `json:"node"`
}

// GetNode returns InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddress.Node, and is useful for accessing the field via an interface.
func (v *InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddress) GetNode() InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress {
	return v.Node
}

// InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress includes the requested fields of the GraphQL type InfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress struct {
	// Unique identifier
	Id          string                                                                                                           `json:"id"`
	Description InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressDescriptionTextAttribute `json:"description"`
	Address     InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost            `json:"address"`
}

// GetId returns InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress.Id, and is useful for accessing the field via an interface.
func (v *InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress) GetId() string {
	return v.Id
}

// GetDescription returns InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress.Description, and is useful for accessing the field via an interface.
func (v *InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress) GetDescription() InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressDescriptionTextAttribute {
	return v.Description
}

// GetAddress returns InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress.Address, and is useful for accessing the field via an interface.
func (v *InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress) GetAddress() InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost {
	return v.Address
}

// InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost includes the requested fields of the GraphQL type IPHost.
// The GraphQL type's documentation follows.
//
// Attribute of type IPHost
type InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost struct {
	Ip    string `json:"ip"`
	Value string `json:"value"`
}

// GetIp returns InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost.Ip, and is useful for accessing the field via an interface.
func (v *InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost) GetIp() string {
	return v.Ip
}

// GetValue returns InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost.Value, and is useful for accessing the field via an interface.
func (v *InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost) GetValue() string {
	return v.Value
}

// InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressDescriptionTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressDescriptionTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressDescriptionTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressDescriptionTextAttribute) GetValue() string {
	return v.Value
}

// InterfaceResponse is returned by Interface on success.
type InterfaceResponse struct {
	InfraIPAddress InterfaceInfraIPAddressPaginatedInfraIPAddress `json:"InfraIPAddress"`
}

// GetInfraIPAddress returns InterfaceResponse.InfraIPAddress, and is useful for accessing the field via an interface.
func (v *InterfaceResponse) GetInfraIPAddress() InterfaceInfraIPAddressPaginatedInfraIPAddress {
	return v.InfraIPAddress
}

// IpaddressInfraIPAddressPaginatedInfraIPAddress includes the requested fields of the GraphQL type PaginatedInfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type IpaddressInfraIPAddressPaginatedInfraIPAddress struct {
	Edges []IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddress `json:"edges"`
}

// GetEdges returns IpaddressInfraIPAddressPaginatedInfraIPAddress.Edges, and is useful for accessing the field via an interface.
func (v *IpaddressInfraIPAddressPaginatedInfraIPAddress) GetEdges() []IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddress {
	return v.Edges
}

// IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddress includes the requested fields of the GraphQL type EdgedInfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddress struct {
	Node IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress `json:"node"`
}

// GetNode returns IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddress.Node, and is useful for accessing the field via an interface.
func (v *IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddress) GetNode() IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress {
	return v.Node
}

// IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress includes the requested fields of the GraphQL type InfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress struct {
	// Unique identifier
	Id            string                                                                                                           `json:"id"`
	Address       IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost            `json:"address"`
	Display_label string                                                                                                           `json:"display_label"`
	Description   IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressDescriptionTextAttribute `json:"description"`
}

// GetId returns IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress.Id, and is useful for accessing the field via an interface.
func (v *IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress) GetId() string {
	return v.Id
}

// GetAddress returns IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress.Address, and is useful for accessing the field via an interface.
func (v *IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress) GetAddress() IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost {
	return v.Address
}

// GetDisplay_label returns IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress.Display_label, and is useful for accessing the field via an interface.
func (v *IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress) GetDisplay_label() string {
	return v.Display_label
}

// GetDescription returns IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress.Description, and is useful for accessing the field via an interface.
func (v *IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress) GetDescription() IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressDescriptionTextAttribute {
	return v.Description
}

// IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost includes the requested fields of the GraphQL type IPHost.
// The GraphQL type's documentation follows.
//
// Attribute of type IPHost
type IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost struct {
	Value         string `json:"value"`
	Ip            string `json:"ip"`
	Netmask       string `json:"netmask"`
	With_hostmask string `json:"with_hostmask"`
	With_netmask  string `json:"with_netmask"`
}

// GetValue returns IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost.Value, and is useful for accessing the field via an interface.
func (v *IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost) GetValue() string {
	return v.Value
}

// GetIp returns IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost.Ip, and is useful for accessing the field via an interface.
func (v *IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost) GetIp() string {
	return v.Ip
}

// GetNetmask returns IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost.Netmask, and is useful for accessing the field via an interface.
func (v *IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost) GetNetmask() string {
	return v.Netmask
}

// GetWith_hostmask returns IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost.With_hostmask, and is useful for accessing the field via an interface.
func (v *IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost) GetWith_hostmask() string {
	return v.With_hostmask
}

// GetWith_netmask returns IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost.With_netmask, and is useful for accessing the field via an interface.
func (v *IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost) GetWith_netmask() string {
	return v.With_netmask
}

// IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressDescriptionTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressDescriptionTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressDescriptionTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *IpaddressInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressDescriptionTextAttribute) GetValue() string {
	return v.Value
}

// IpaddressResponse is returned by Ipaddress on success.
type IpaddressResponse struct {
	InfraIPAddress IpaddressInfraIPAddressPaginatedInfraIPAddress `json:"InfraIPAddress"`
}

// GetInfraIPAddress returns IpaddressResponse.InfraIPAddress, and is useful for accessing the field via an interface.
func (v *IpaddressResponse) GetInfraIPAddress() IpaddressInfraIPAddressPaginatedInfraIPAddress {
	return v.InfraIPAddress
}

// PlatformInfraPlatformPaginatedInfraPlatform includes the requested fields of the GraphQL type PaginatedInfraPlatform.
// The GraphQL type's documentation follows.
//
// A Platform represent the type of software running on a device.
type PlatformInfraPlatformPaginatedInfraPlatform struct {
	Edges []PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatform `json:"edges"`
}

// GetEdges returns PlatformInfraPlatformPaginatedInfraPlatform.Edges, and is useful for accessing the field via an interface.
func (v *PlatformInfraPlatformPaginatedInfraPlatform) GetEdges() []PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatform {
	return v.Edges
}

// PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatform includes the requested fields of the GraphQL type EdgedInfraPlatform.
// The GraphQL type's documentation follows.
//
// A Platform represent the type of software running on a device.
type PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatform struct {
	Node PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatform `json:"node"`
}

// GetNode returns PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatform.Node, and is useful for accessing the field via an interface.
func (v *PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatform) GetNode() PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatform {
	return v.Node
}

// PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatform includes the requested fields of the GraphQL type InfraPlatform.
// The GraphQL type's documentation follows.
//
// A Platform represent the type of software running on a device.
type PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatform struct {
	// Unique identifier
	Id                  string                                                                                                              `json:"id"`
	Description         PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformDescriptionTextAttribute         `json:"description"`
	Containerlab_os     PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformContainerlab_osTextAttribute     `json:"containerlab_os"`
	Name                PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNameTextAttribute                `json:"name"`
	Nornir_platform     PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNornir_platformTextAttribute     `json:"nornir_platform"`
	Netmiko_device_type PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNetmiko_device_typeTextAttribute `json:"netmiko_device_type"`
	Napalm_driver       PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNapalm_driverTextAttribute       `json:"napalm_driver"`
}

// GetId returns PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatform.Id, and is useful for accessing the field via an interface.
func (v *PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatform) GetId() string {
	return v.Id
}

// GetDescription returns PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatform.Description, and is useful for accessing the field via an interface.
func (v *PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatform) GetDescription() PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformDescriptionTextAttribute {
	return v.Description
}

// GetContainerlab_os returns PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatform.Containerlab_os, and is useful for accessing the field via an interface.
func (v *PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatform) GetContainerlab_os() PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformContainerlab_osTextAttribute {
	return v.Containerlab_os
}

// GetName returns PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatform.Name, and is useful for accessing the field via an interface.
func (v *PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatform) GetName() PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNameTextAttribute {
	return v.Name
}

// GetNornir_platform returns PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatform.Nornir_platform, and is useful for accessing the field via an interface.
func (v *PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatform) GetNornir_platform() PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNornir_platformTextAttribute {
	return v.Nornir_platform
}

// GetNetmiko_device_type returns PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatform.Netmiko_device_type, and is useful for accessing the field via an interface.
func (v *PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatform) GetNetmiko_device_type() PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNetmiko_device_typeTextAttribute {
	return v.Netmiko_device_type
}

// GetNapalm_driver returns PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatform.Napalm_driver, and is useful for accessing the field via an interface.
func (v *PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatform) GetNapalm_driver() PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNapalm_driverTextAttribute {
	return v.Napalm_driver
}

// PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformContainerlab_osTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformContainerlab_osTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformContainerlab_osTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformContainerlab_osTextAttribute) GetValue() string {
	return v.Value
}

// PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformDescriptionTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformDescriptionTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformDescriptionTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformDescriptionTextAttribute) GetValue() string {
	return v.Value
}

// PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNameTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNameTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNameTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNameTextAttribute) GetValue() string {
	return v.Value
}

// PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNapalm_driverTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNapalm_driverTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNapalm_driverTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNapalm_driverTextAttribute) GetValue() string {
	return v.Value
}

// PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNetmiko_device_typeTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNetmiko_device_typeTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNetmiko_device_typeTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNetmiko_device_typeTextAttribute) GetValue() string {
	return v.Value
}

// PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNornir_platformTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNornir_platformTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNornir_platformTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *PlatformInfraPlatformPaginatedInfraPlatformEdgesEdgedInfraPlatformNodeInfraPlatformNornir_platformTextAttribute) GetValue() string {
	return v.Value
}

// PlatformResponse is returned by Platform on success.
type PlatformResponse struct {
	InfraPlatform PlatformInfraPlatformPaginatedInfraPlatform `json:"InfraPlatform"`
}

// GetInfraPlatform returns PlatformResponse.InfraPlatform, and is useful for accessing the field via an interface.
func (v *PlatformResponse) GetInfraPlatform() PlatformInfraPlatformPaginatedInfraPlatform {
	return v.InfraPlatform
}

type RelatedIPAddressNodeInput struct {
	Id                     string             `json:"id"`
	From_pool              IPAddressPoolInput `json:"from_pool"`
	Relation__is_visible   bool               `json:"_relation__is_visible"`
	Relation__is_protected bool               `json:"_relation__is_protected"`
	Relation__owner        string             `json:"_relation__owner"`
	Relation__source       string             `json:"_relation__source"`
}

// GetId returns RelatedIPAddressNodeInput.Id, and is useful for accessing the field via an interface.
func (v *RelatedIPAddressNodeInput) GetId() string { return v.Id }

// GetFrom_pool returns RelatedIPAddressNodeInput.From_pool, and is useful for accessing the field via an interface.
func (v *RelatedIPAddressNodeInput) GetFrom_pool() IPAddressPoolInput { return v.From_pool }

// GetRelation__is_visible returns RelatedIPAddressNodeInput.Relation__is_visible, and is useful for accessing the field via an interface.
func (v *RelatedIPAddressNodeInput) GetRelation__is_visible() bool { return v.Relation__is_visible }

// GetRelation__is_protected returns RelatedIPAddressNodeInput.Relation__is_protected, and is useful for accessing the field via an interface.
func (v *RelatedIPAddressNodeInput) GetRelation__is_protected() bool { return v.Relation__is_protected }

// GetRelation__owner returns RelatedIPAddressNodeInput.Relation__owner, and is useful for accessing the field via an interface.
func (v *RelatedIPAddressNodeInput) GetRelation__owner() string { return v.Relation__owner }

// GetRelation__source returns RelatedIPAddressNodeInput.Relation__source, and is useful for accessing the field via an interface.
func (v *RelatedIPAddressNodeInput) GetRelation__source() string { return v.Relation__source }

type RelatedNodeInput struct {
	Id                     string           `json:"id"`
	Hfid                   []string         `json:"hfid"`
	Kind                   string           `json:"kind"`
	From_pool              GenericPoolInput `json:"from_pool"`
	Relation__is_visible   bool             `json:"_relation__is_visible"`
	Relation__is_protected bool             `json:"_relation__is_protected"`
	Relation__owner        string           `json:"_relation__owner"`
	Relation__source       string           `json:"_relation__source"`
}

// GetId returns RelatedNodeInput.Id, and is useful for accessing the field via an interface.
func (v *RelatedNodeInput) GetId() string { return v.Id }

// GetHfid returns RelatedNodeInput.Hfid, and is useful for accessing the field via an interface.
func (v *RelatedNodeInput) GetHfid() []string { return v.Hfid }

// GetKind returns RelatedNodeInput.Kind, and is useful for accessing the field via an interface.
func (v *RelatedNodeInput) GetKind() string { return v.Kind }

// GetFrom_pool returns RelatedNodeInput.From_pool, and is useful for accessing the field via an interface.
func (v *RelatedNodeInput) GetFrom_pool() GenericPoolInput { return v.From_pool }

// GetRelation__is_visible returns RelatedNodeInput.Relation__is_visible, and is useful for accessing the field via an interface.
func (v *RelatedNodeInput) GetRelation__is_visible() bool { return v.Relation__is_visible }

// GetRelation__is_protected returns RelatedNodeInput.Relation__is_protected, and is useful for accessing the field via an interface.
func (v *RelatedNodeInput) GetRelation__is_protected() bool { return v.Relation__is_protected }

// GetRelation__owner returns RelatedNodeInput.Relation__owner, and is useful for accessing the field via an interface.
func (v *RelatedNodeInput) GetRelation__owner() string { return v.Relation__owner }

// GetRelation__source returns RelatedNodeInput.Relation__source, and is useful for accessing the field via an interface.
func (v *RelatedNodeInput) GetRelation__source() string { return v.Relation__source }

type TextAttributeCreate struct {
	Is_visible   bool   `json:"is_visible"`
	Is_protected bool   `json:"is_protected"`
	Source       string `json:"source"`
	Owner        string `json:"owner"`
	Value        string `json:"value"`
}

// GetIs_visible returns TextAttributeCreate.Is_visible, and is useful for accessing the field via an interface.
func (v *TextAttributeCreate) GetIs_visible() bool { return v.Is_visible }

// GetIs_protected returns TextAttributeCreate.Is_protected, and is useful for accessing the field via an interface.
func (v *TextAttributeCreate) GetIs_protected() bool { return v.Is_protected }

// GetSource returns TextAttributeCreate.Source, and is useful for accessing the field via an interface.
func (v *TextAttributeCreate) GetSource() string { return v.Source }

// GetOwner returns TextAttributeCreate.Owner, and is useful for accessing the field via an interface.
func (v *TextAttributeCreate) GetOwner() string { return v.Owner }

// GetValue returns TextAttributeCreate.Value, and is useful for accessing the field via an interface.
func (v *TextAttributeCreate) GetValue() string { return v.Value }

type TextAttributeUpdate struct {
	Is_default   bool   `json:"is_default"`
	Is_visible   bool   `json:"is_visible"`
	Is_protected bool   `json:"is_protected"`
	Source       string `json:"source"`
	Owner        string `json:"owner"`
	Value        string `json:"value"`
}

// GetIs_default returns TextAttributeUpdate.Is_default, and is useful for accessing the field via an interface.
func (v *TextAttributeUpdate) GetIs_default() bool { return v.Is_default }

// GetIs_visible returns TextAttributeUpdate.Is_visible, and is useful for accessing the field via an interface.
func (v *TextAttributeUpdate) GetIs_visible() bool { return v.Is_visible }

// GetIs_protected returns TextAttributeUpdate.Is_protected, and is useful for accessing the field via an interface.
func (v *TextAttributeUpdate) GetIs_protected() bool { return v.Is_protected }

// GetSource returns TextAttributeUpdate.Source, and is useful for accessing the field via an interface.
func (v *TextAttributeUpdate) GetSource() string { return v.Source }

// GetOwner returns TextAttributeUpdate.Owner, and is useful for accessing the field via an interface.
func (v *TextAttributeUpdate) GetOwner() string { return v.Owner }

// GetValue returns TextAttributeUpdate.Value, and is useful for accessing the field via an interface.
func (v *TextAttributeUpdate) GetValue() string { return v.Value }

// TopologyResponse is returned by Topology on success.
type TopologyResponse struct {
	TopologyTopology TopologyTopologyTopologyPaginatedTopologyTopology `json:"TopologyTopology"`
}

// GetTopologyTopology returns TopologyResponse.TopologyTopology, and is useful for accessing the field via an interface.
func (v *TopologyResponse) GetTopologyTopology() TopologyTopologyTopologyPaginatedTopologyTopology {
	return v.TopologyTopology
}

// TopologyTopologyTopologyPaginatedTopologyTopology includes the requested fields of the GraphQL type PaginatedTopologyTopology.
// The GraphQL type's documentation follows.
//
// A Topology represents the entire network pod.
type TopologyTopologyTopologyPaginatedTopologyTopology struct {
	Edges []TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopology `json:"edges"`
}

// GetEdges returns TopologyTopologyTopologyPaginatedTopologyTopology.Edges, and is useful for accessing the field via an interface.
func (v *TopologyTopologyTopologyPaginatedTopologyTopology) GetEdges() []TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopology {
	return v.Edges
}

// TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopology includes the requested fields of the GraphQL type EdgedTopologyTopology.
// The GraphQL type's documentation follows.
//
// A Topology represents the entire network pod.
type TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopology struct {
	Node TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopology `json:"node"`
}

// GetNode returns TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopology.Node, and is useful for accessing the field via an interface.
func (v *TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopology) GetNode() TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopology {
	return v.Node
}

// TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopology includes the requested fields of the GraphQL type TopologyTopology.
// The GraphQL type's documentation follows.
//
// A Topology represents the entire network pod.
type TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopology struct {
	// Unique identifier
	Id            string                                                                                                                  `json:"id"`
	Display_label string                                                                                                                  `json:"display_label"`
	Description   TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopologyDescriptionTextAttribute `json:"description"`
	Name          TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute        `json:"name"`
}

// GetId returns TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopology.Id, and is useful for accessing the field via an interface.
func (v *TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopology) GetId() string {
	return v.Id
}

// GetDisplay_label returns TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopology.Display_label, and is useful for accessing the field via an interface.
func (v *TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopology) GetDisplay_label() string {
	return v.Display_label
}

// GetDescription returns TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopology.Description, and is useful for accessing the field via an interface.
func (v *TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopology) GetDescription() TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopologyDescriptionTextAttribute {
	return v.Description
}

// GetName returns TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopology.Name, and is useful for accessing the field via an interface.
func (v *TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopology) GetName() TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute {
	return v.Name
}

// TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopologyDescriptionTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopologyDescriptionTextAttribute struct {
	Value string `json:"value"`
	Id    string `json:"id"`
}

// GetValue returns TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopologyDescriptionTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopologyDescriptionTextAttribute) GetValue() string {
	return v.Value
}

// GetId returns TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopologyDescriptionTextAttribute.Id, and is useful for accessing the field via an interface.
func (v *TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopologyDescriptionTextAttribute) GetId() string {
	return v.Id
}

// TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute struct {
	Value string `json:"value"`
	Id    string `json:"id"`
}

// GetValue returns TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute) GetValue() string {
	return v.Value
}

// GetId returns TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute.Id, and is useful for accessing the field via an interface.
func (v *TopologyTopologyTopologyPaginatedTopologyTopologyEdgesEdgedTopologyTopologyNodeTopologyTopologyNameTextAttribute) GetId() string {
	return v.Id
}

// __AutonomoussystemInput is used internally by genqlient
type __AutonomoussystemInput struct {
	As_name string `json:"as_name"`
}

// GetAs_name returns __AutonomoussystemInput.As_name, and is useful for accessing the field via an interface.
func (v *__AutonomoussystemInput) GetAs_name() string { return v.As_name }

// __CountryInput is used internally by genqlient
type __CountryInput struct {
	Country_name string `json:"country_name"`
}

// GetCountry_name returns __CountryInput.Country_name, and is useful for accessing the field via an interface.
func (v *__CountryInput) GetCountry_name() string { return v.Country_name }

// __DeviceCreateInput is used internally by genqlient
type __DeviceCreateInput struct {
	Data InfraDeviceCreateInput `json:"data"`
}

// GetData returns __DeviceCreateInput.Data, and is useful for accessing the field via an interface.
func (v *__DeviceCreateInput) GetData() InfraDeviceCreateInput { return v.Data }

// __DeviceDeleteInput is used internally by genqlient
type __DeviceDeleteInput struct {
	Id string `json:"id"`
}

// GetId returns __DeviceDeleteInput.Id, and is useful for accessing the field via an interface.
func (v *__DeviceDeleteInput) GetId() string { return v.Id }

// __DeviceInput is used internally by genqlient
type __DeviceInput struct {
	Edges_node_name_value string `json:"edges_node_name_value"`
}

// GetEdges_node_name_value returns __DeviceInput.Edges_node_name_value, and is useful for accessing the field via an interface.
func (v *__DeviceInput) GetEdges_node_name_value() string { return v.Edges_node_name_value }

// __DeviceUpsertInput is used internally by genqlient
type __DeviceUpsertInput struct {
	Data InfraDeviceUpsertInput `json:"data"`
}

// GetData returns __DeviceUpsertInput.Data, and is useful for accessing the field via an interface.
func (v *__DeviceUpsertInput) GetData() InfraDeviceUpsertInput { return v.Data }

// __DevicequeryInput is used internally by genqlient
type __DevicequeryInput struct {
	Device_name string `json:"device_name"`
}

// GetDevice_name returns __DevicequeryInput.Device_name, and is useful for accessing the field via an interface.
func (v *__DevicequeryInput) GetDevice_name() string { return v.Device_name }

// __DevicetypeInput is used internally by genqlient
type __DevicetypeInput struct {
	Device_type_name string `json:"device_type_name"`
}

// GetDevice_type_name returns __DevicetypeInput.Device_type_name, and is useful for accessing the field via an interface.
func (v *__DevicetypeInput) GetDevice_type_name() string { return v.Device_type_name }

// __InterfaceInput is used internally by genqlient
type __InterfaceInput struct {
	Interface_name string `json:"interface_name"`
}

// GetInterface_name returns __InterfaceInput.Interface_name, and is useful for accessing the field via an interface.
func (v *__InterfaceInput) GetInterface_name() string { return v.Interface_name }

// __IpaddressInput is used internally by genqlient
type __IpaddressInput struct {
	Ip_address_value string `json:"ip_address_value"`
}

// GetIp_address_value returns __IpaddressInput.Ip_address_value, and is useful for accessing the field via an interface.
func (v *__IpaddressInput) GetIp_address_value() string { return v.Ip_address_value }

// __PlatformInput is used internally by genqlient
type __PlatformInput struct {
	Platform_name string `json:"platform_name"`
}

// GetPlatform_name returns __PlatformInput.Platform_name, and is useful for accessing the field via an interface.
func (v *__PlatformInput) GetPlatform_name() string { return v.Platform_name }

// __TopologyInput is used internally by genqlient
type __TopologyInput struct {
	Topology_name string `json:"topology_name"`
}

// GetTopology_name returns __TopologyInput.Topology_name, and is useful for accessing the field via an interface.
func (v *__TopologyInput) GetTopology_name() string { return v.Topology_name }

// The query or mutation executed by Accounts.
const Accounts_Operation = `
query Accounts {
	CoreAccount {
		edges {
			node {
				id
				status {
					id
					description
					color
					value
				}
				display_label
			}
		}
	}
}
`

func Accounts(
	ctx_ context.Context,
	client_ graphql.Client,
) (*AccountsResponse, error) {
	req_ := &graphql.Request{
		OpName: "Accounts",
		Query:  Accounts_Operation,
	}
	var err_ error

	var data_ AccountsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by Autonomoussystem.
const Autonomoussystem_Operation = `
query Autonomoussystem ($as_name: String!) {
	InfraAutonomousSystem(name__value: $as_name) {
		edges {
			node {
				id
				name {
					value
				}
				asn {
					id
				}
				display_label
				description {
					value
				}
			}
		}
	}
}
`

func Autonomoussystem(
	ctx_ context.Context,
	client_ graphql.Client,
	as_name string,
) (*AutonomoussystemResponse, error) {
	req_ := &graphql.Request{
		OpName: "Autonomoussystem",
		Query:  Autonomoussystem_Operation,
		Variables: &__AutonomoussystemInput{
			As_name: as_name,
		},
	}
	var err_ error

	var data_ AutonomoussystemResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by Bgpsessions.
const Bgpsessions_Operation = `
query Bgpsessions {
	InfraBGPSession {
		edges {
			node {
				id
				display_label
				description {
					value
				}
				remote_ip {
					node {
						address {
							value
						}
					}
				}
			}
		}
	}
}
`

func Bgpsessions(
	ctx_ context.Context,
	client_ graphql.Client,
) (*BgpsessionsResponse, error) {
	req_ := &graphql.Request{
		OpName: "Bgpsessions",
		Query:  Bgpsessions_Operation,
	}
	var err_ error

	var data_ BgpsessionsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by Countries.
const Countries_Operation = `
query Countries {
	LocationCountry {
		edges {
			node {
				id
				display_label
				name {
					value
				}
				description {
					value
				}
			}
		}
	}
}
`

func Countries(
	ctx_ context.Context,
	client_ graphql.Client,
) (*CountriesResponse, error) {
	req_ := &graphql.Request{
		OpName: "Countries",
		Query:  Countries_Operation,
	}
	var err_ error

	var data_ CountriesResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by Country.
const Country_Operation = `
query Country ($country_name: String!) {
	LocationCountry(name__value: $country_name) {
		edges {
			node {
				id
				display_label
				name {
					value
				}
				description {
					value
				}
			}
		}
	}
}
`

func Country(
	ctx_ context.Context,
	client_ graphql.Client,
	country_name string,
) (*CountryResponse, error) {
	req_ := &graphql.Request{
		OpName: "Country",
		Query:  Country_Operation,
		Variables: &__CountryInput{
			Country_name: country_name,
		},
	}
	var err_ error

	var data_ CountryResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by Device.
const Device_Operation = `
query Device ($edges_node_name_value: String!) {
	InfraDevice(name__value: $edges_node_name_value) {
		edges {
			node {
				id
				name {
					value
				}
				role {
					value
					id
				}
				asn {
					node {
						id
					}
				}
				description {
					id
					value
				}
				device_type {
					node {
						id
					}
				}
				location {
					node {
						__typename
						id
					}
				}
				platform {
					node {
						id
					}
				}
				primary_address {
					node {
						id
					}
				}
				status {
					id
					value
				}
				topology {
					node {
						id
						name {
							value
						}
					}
				}
			}
		}
	}
}
`

func Device(
	ctx_ context.Context,
	client_ graphql.Client,
	edges_node_name_value string,
) (*DeviceResponse, error) {
	req_ := &graphql.Request{
		OpName: "Device",
		Query:  Device_Operation,
		Variables: &__DeviceInput{
			Edges_node_name_value: edges_node_name_value,
		},
	}
	var err_ error

	var data_ DeviceResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by DeviceCreate.
const DeviceCreate_Operation = `
mutation DeviceCreate ($data: InfraDeviceCreateInput!) {
	InfraDeviceCreate(data: $data) {
		object {
			id
			display_label
			__typename
			name {
				value
			}
			role {
				value
				id
			}
			asn {
				node {
					id
				}
			}
			description {
				id
				value
			}
			device_type {
				node {
					id
				}
			}
			location {
				node {
					__typename
					id
				}
			}
			platform {
				node {
					id
				}
			}
			primary_address {
				node {
					id
				}
			}
			status {
				id
				value
			}
			topology {
				node {
					id
					name {
						value
					}
				}
			}
		}
		__typename
	}
}
`

func DeviceCreate(
	ctx_ context.Context,
	client_ graphql.Client,
	data InfraDeviceCreateInput,
) (*DeviceCreateResponse, error) {
	req_ := &graphql.Request{
		OpName: "DeviceCreate",
		Query:  DeviceCreate_Operation,
		Variables: &__DeviceCreateInput{
			Data: data,
		},
	}
	var err_ error

	var data_ DeviceCreateResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by DeviceDelete.
const DeviceDelete_Operation = `
mutation DeviceDelete ($id: String!) {
	InfraDeviceDelete(data: {id:$id}) {
		ok
	}
}
`

func DeviceDelete(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (*DeviceDeleteResponse, error) {
	req_ := &graphql.Request{
		OpName: "DeviceDelete",
		Query:  DeviceDelete_Operation,
		Variables: &__DeviceDeleteInput{
			Id: id,
		},
	}
	var err_ error

	var data_ DeviceDeleteResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by DeviceUpsert.
const DeviceUpsert_Operation = `
mutation DeviceUpsert ($data: InfraDeviceUpsertInput!) {
	InfraDeviceUpsert(data: $data) {
		object {
			id
			display_label
			__typename
			name {
				value
			}
			role {
				value
				id
			}
			asn {
				node {
					id
				}
			}
			description {
				id
				value
			}
			device_type {
				node {
					id
				}
			}
			location {
				node {
					__typename
					id
				}
			}
			platform {
				node {
					id
				}
			}
			primary_address {
				node {
					id
				}
			}
			status {
				id
				value
			}
			topology {
				node {
					id
					name {
						value
					}
				}
			}
		}
		__typename
	}
}
`

func DeviceUpsert(
	ctx_ context.Context,
	client_ graphql.Client,
	data InfraDeviceUpsertInput,
) (*DeviceUpsertResponse, error) {
	req_ := &graphql.Request{
		OpName: "DeviceUpsert",
		Query:  DeviceUpsert_Operation,
		Variables: &__DeviceUpsertInput{
			Data: data,
		},
	}
	var err_ error

	var data_ DeviceUpsertResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by Devicequery.
const Devicequery_Operation = `
query Devicequery ($device_name: String!) {
	InfraDevice(name__value: $device_name) {
		edges {
			node {
				id
				name {
					value
				}
				role {
					value
					color
					description
					id
				}
				platform {
					node {
						id
					}
				}
				primary_address {
					node {
						id
					}
				}
				status {
					id
				}
				topology {
					node {
						id
					}
				}
				device_type {
					node {
						id
					}
				}
				asn {
					node {
						asn {
							id
						}
					}
				}
				description {
					value
				}
			}
		}
	}
}
`

func Devicequery(
	ctx_ context.Context,
	client_ graphql.Client,
	device_name string,
) (*DevicequeryResponse, error) {
	req_ := &graphql.Request{
		OpName: "Devicequery",
		Query:  Devicequery_Operation,
		Variables: &__DevicequeryInput{
			Device_name: device_name,
		},
	}
	var err_ error

	var data_ DevicequeryResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by Devices.
const Devices_Operation = `
query Devices {
	InfraDevice {
		edges {
			node {
				id
				name {
					value
				}
				role {
					value
					color
				}
			}
		}
	}
}
`

func Devices(
	ctx_ context.Context,
	client_ graphql.Client,
) (*DevicesResponse, error) {
	req_ := &graphql.Request{
		OpName: "Devices",
		Query:  Devices_Operation,
	}
	var err_ error

	var data_ DevicesResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by Devicetype.
const Devicetype_Operation = `
query Devicetype ($device_type_name: String!) {
	InfraDeviceType(name__value: $device_type_name) {
		edges {
			node {
				id
				platform {
					node {
						id
						name {
							value
						}
					}
				}
				description {
					id
					value
				}
				name {
					value
				}
				weight {
					value
				}
			}
		}
	}
}
`

func Devicetype(
	ctx_ context.Context,
	client_ graphql.Client,
	device_type_name string,
) (*DevicetypeResponse, error) {
	req_ := &graphql.Request{
		OpName: "Devicetype",
		Query:  Devicetype_Operation,
		Variables: &__DevicetypeInput{
			Device_type_name: device_type_name,
		},
	}
	var err_ error

	var data_ DevicetypeResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by Interface.
const Interface_Operation = `
query Interface ($interface_name: String!) {
	InfraIPAddress(interface__name__value: $interface_name) {
		edges {
			node {
				id
				description {
					value
				}
				address {
					ip
					value
				}
			}
		}
	}
}
`

func Interface(
	ctx_ context.Context,
	client_ graphql.Client,
	interface_name string,
) (*InterfaceResponse, error) {
	req_ := &graphql.Request{
		OpName: "Interface",
		Query:  Interface_Operation,
		Variables: &__InterfaceInput{
			Interface_name: interface_name,
		},
	}
	var err_ error

	var data_ InterfaceResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by Ipaddress.
const Ipaddress_Operation = `
query Ipaddress ($ip_address_value: String!) {
	InfraIPAddress(address__value: $ip_address_value) {
		edges {
			node {
				id
				address {
					value
					ip
					netmask
					with_hostmask
					with_netmask
				}
				display_label
				description {
					value
				}
			}
		}
	}
}
`

func Ipaddress(
	ctx_ context.Context,
	client_ graphql.Client,
	ip_address_value string,
) (*IpaddressResponse, error) {
	req_ := &graphql.Request{
		OpName: "Ipaddress",
		Query:  Ipaddress_Operation,
		Variables: &__IpaddressInput{
			Ip_address_value: ip_address_value,
		},
	}
	var err_ error

	var data_ IpaddressResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by Platform.
const Platform_Operation = `
query Platform ($platform_name: String!) {
	InfraPlatform(name__value: $platform_name) {
		edges {
			node {
				id
				description {
					value
				}
				containerlab_os {
					value
				}
				name {
					value
				}
				nornir_platform {
					value
				}
				netmiko_device_type {
					value
				}
				napalm_driver {
					value
				}
			}
		}
	}
}
`

func Platform(
	ctx_ context.Context,
	client_ graphql.Client,
	platform_name string,
) (*PlatformResponse, error) {
	req_ := &graphql.Request{
		OpName: "Platform",
		Query:  Platform_Operation,
		Variables: &__PlatformInput{
			Platform_name: platform_name,
		},
	}
	var err_ error

	var data_ PlatformResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by Topology.
const Topology_Operation = `
query Topology ($topology_name: String!) {
	TopologyTopology(name__value: $topology_name) {
		edges {
			node {
				id
				display_label
				description {
					value
					id
				}
				name {
					value
					id
				}
			}
		}
	}
}
`

func Topology(
	ctx_ context.Context,
	client_ graphql.Client,
	topology_name string,
) (*TopologyResponse, error) {
	req_ := &graphql.Request{
		OpName: "Topology",
		Query:  Topology_Operation,
		Variables: &__TopologyInput{
			Topology_name: topology_name,
		},
	}
	var err_ error

	var data_ TopologyResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
